<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   <extension
         id="BFIN_ELF"
         name="Blackfin ELF Parser"
         point="org.eclipse.cdt.core.BinaryParser">
      <cextension>
         <run
               class="com.analog.gnu.toolchain.blackfin.parser.BlackfinElfParser">
         </run>
      </cextension>
   </extension>
   <extension
         point="org.eclipse.cdt.core.templateAssociations">
      <template
            id="org.eclipse.cdt.build.core.templates.EmptyProject">
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.base">
         </toolChain>
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.base">
         </toolChain>
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base">
         </toolChain>
      </template>
      <template
            id="org.eclipse.cdt.build.core.templates.HelloWorldCAnsiProject">
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.base">
         </toolChain>
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.base">
         </toolChain>
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base">
         </toolChain>
      </template>
      <template
            id="org.eclipse.cdt.build.core.templates.HelloWorldCCProject">
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.base">
         </toolChain>
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.base">
         </toolChain>
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base">
         </toolChain>
      </template>
      <template
            id="org.eclipse.cdt.build.core.templates.MakefileHelloWorldCCProject">
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.base">
         </toolChain>
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.base">
         </toolChain>
         <toolChain
               id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base">
         </toolChain>
      </template>
   </extension>
   <extension
         point="org.eclipse.cdt.debug.core.CDebugger">
      <debugger
            class="com.analog.gnu.toolchain.blackfin.debug.BlackfinElfCDIDebugger"
            cpu="*"
            id="com.analog.gnu.toolchain.blackfin.debug.BlackfinElfDebugger"
            modes="run"
            name="Blackfin ELF GDB Server"
            platform="*">
      </debugger>
   </extension>
   <extension
         id="example"
         point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
      <tool
            id="com.analog.gnu.toolchain.blackfin.tool.ldr"
            isAbstract="true"
            name="Blackfin Loader">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildArtefactType">
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.exe">
               </value>
            </property>
         </supportedProperties>
         <inputType
               buildVariable="OBJS"
               id="com.analog.gnu.toolchain.blackfin.ldr.input"
               multipleOfType="true"
               sourceContentType="org.eclipse.cdt.managedbuilder.core.compiledObjectFile">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="EXECUTABLES"
               id="com.analog.gnu.toolchain.blackfin.ldr.output"
               nameProvider="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuLinkOutputNameProvider"
               outputs="ldr">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="gnu.c.link.option.shared"
                     value="false">
               </checkOption>
            </enablement>
         </outputType>
      </tool>
      <toolChain
            id="com.analog.gnu.toolchain.blackfin.bfin"
            isAbstract="true"
            isToolChainSupported="com.analog.gnu.toolchain.blackfin.build.CheckToolchain"
            name="Common Blackfin Toolchain Options"
            targetTool="cdt.managedbuild.tool.gnu.c.linker;cdt.managedbuild.tool.gnu.cpp.linker;cdt.managedbuild.tool.gnu.archiver">
         <targetPlatform
               archList="all"
               binaryParser="com.analog.gnu.toolchain.blackfin.BFIN_ELF"
               id="com.analog.gnu.toolchain.blackfin.elf.platform.base"
               name="Development Platform"
               osList="all">
         </targetPlatform>
         <builder
               id="com.analog.gnu.toolchain.blackfin.builder.base"
               superClass="cdt.managedbuild.target.gnu.builder">
         </builder>
         <tool
               id="com.analog.gnu.toolchain.blackfin.archiver.base"
               isAbstract="true"
               superClass="cdt.managedbuild.tool.gnu.archiver">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </checkBuildProperty>
            </enablement>
         </tool>
         <tool
               id="com.analog.gnu.toolchain.blackfin.assembler.base"
               isAbstract="true"
               superClass="cdt.managedbuild.tool.gnu.assembler">
			<option
				command="-mcpu=${value}"
				id="com.analog.gnu.toolchain.blackfin.c.assembler.options.proc"
				valueType="string">
			</option>
         </tool>
         <tool
               id="com.analog.gnu.toolchain.blackfin.c.compiler.base"
               isAbstract="true"
               superClass="cdt.managedbuild.tool.gnu.c.compiler">
            <option
                  command="-mcpu=${value}"
                  id="com.analog.gnu.toolchain.blackfin.c.compiler.options.proc"
                  valueType="string">
            </option>
            <optionCategory
                id="com.analog.gnu.toolchain.blackfin.c.compiler.optioncategory.multicore"
                name="Multi-core"
                owner="com.analog.gnu.toolchain.blackfin.c.compiler.base">
                <enablement
                    type="ALL">
                 <checkOption
                       holderId="com.analog.gnu.toolchain.blackfin.c.compiler.base"
                       isRegex="true"
                       optionId="com.analog.gnu.toolchain.blackfin.c.compiler.options.proc"
                       value="bf60.*">
                 </checkOption>
              </enablement>
 			</optionCategory>
 			<option
 			    applicabilityCalculator="com.analog.gnu.toolchain.blackfin.core.MultiCoreApplicabilityCalculator"
				category="com.analog.gnu.toolchain.blackfin.c.compiler.optioncategory.multicore"
				command="-mmulticore -mcore${value}"
				id="com.analog.gnu.toolchain.blackfin.c.compiler.options.mcore"
				isAbstract="false"
				name="Target Core"
				resourceFilter="all"
				tip="Enable multicore support and build for a specified Core."
				valueHandler="com.analog.gnu.toolchain.blackfin.core.MultiCoreValueHandler"
				valueType="enumerated">
				<enumeratedOptionValue
			          command="-mmulticore -mcore0"
			          id="com.analog.gnu.toolchain.blackfin.c.compiler.options.mcore0"
			          isDefault="true"
			          name="Core 0 (-mmulticore -mcore0)">
				</enumeratedOptionValue>
				<enumeratedOptionValue
			          command="-mmulticore -mcore1"
			          id="com.analog.gnu.toolchain.blackfin.c.compiler.options.mcore1"
			          isDefault="false"
			          name="Core 1 (-mmulticore -mcore1)">
				</enumeratedOptionValue>
 			</option>
 			<optionCategory
                id="com.analog.gnu.toolchain.blackfin.c.compiler.optioncategory.multicore.bf561"
                name="Multi-core"
                owner="com.analog.gnu.toolchain.blackfin.c.compiler.base">
                <enablement
                    type="ALL">
                 <checkOption
                       holderId="com.analog.gnu.toolchain.blackfin.c.compiler.base"
                       isRegex="true"
                       optionId="com.analog.gnu.toolchain.blackfin.c.compiler.options.proc"
                       value="bf561.*">
                 </checkOption>
              </enablement>
 			</optionCategory>
 			<option
 			    applicabilityCalculator="com.analog.gnu.toolchain.blackfin.core.MultiCoreApplicabilityCalculator"
				category="com.analog.gnu.toolchain.blackfin.c.compiler.optioncategory.multicore.bf561"
				command="-mmulticore -mcore${value}"
				id="com.analog.gnu.toolchain.blackfin.c.compiler.options.mcore.bf561"
				isAbstract="false"
				name="Target Core"
				resourceFilter="all"
				tip="Enable multicore support and build for a specified Core."
				valueHandler="com.analog.gnu.toolchain.blackfin.core.MultiCoreValueHandler"
				valueType="enumerated">
				<enumeratedOptionValue
			          command="-mmulticore -mcorea"
			          id="com.analog.gnu.toolchain.blackfin.c.compiler.options.mcorea"
			          isDefault="true"
			          name="Core A (-mmulticore -mcorea)">
				</enumeratedOptionValue>
				<enumeratedOptionValue
			          command="-mmulticore -mcoreb"
			          id="com.analog.gnu.toolchain.blackfin.c.compiler.options.mcoreb"
			          isDefault="false"
			          name="Core B (-mmulticore -mcoreb)">
				</enumeratedOptionValue>
 			</option>
		</tool>
         <tool
               id="com.analog.gnu.toolchain.blackfin.c.linker.base"
               isAbstract="true"
               superClass="cdt.managedbuild.tool.gnu.c.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
            <option
                  command="-mcpu=${value}"
                  id="com.analog.gnu.toolchain.blackfin.c.linker.options.proc"
                  valueType="string">
            </option>
 			<option
 			    applicabilityCalculator="com.analog.gnu.toolchain.blackfin.core.BF60XApplicabilityCalculator"
				command="-mmulticore -mcore${value}"
				id="com.analog.gnu.toolchain.blackfin.c.linker.options.mcore"
				isAbstract="false"
				name="Target Core"
				resourceFilter="all"
				tip="Enable multicore support and build for a specified Core."
				valueType="enumerated">
				<enumeratedOptionValue
			          command="-mmulticore -mcore0"
			          id="com.analog.gnu.toolchain.blackfin.c.linker.options.mcore0"
			          isDefault="true"
			          name="Core 0 (-mmulticore -mcore0)">
				</enumeratedOptionValue>
				<enumeratedOptionValue
			          command="-mmulticore -mcore1"
			          id="com.analog.gnu.toolchain.blackfin.c.linker.options.mcore1"
			          isDefault="false"
			          name="Core 1 (-mmulticore -mcore1)">
				</enumeratedOptionValue>
			</option>
 			<option
 			    applicabilityCalculator="com.analog.gnu.toolchain.blackfin.core.BF561ApplicabilityCalculator"
				command="-mmulticore -mcore${value}"
				id="com.analog.gnu.toolchain.blackfin.c.linker.options.mcore.bf561"
				isAbstract="false"
				name="Target Core"
				resourceFilter="all"
				tip="Enable multicore support and build for a specified Core."
				valueType="enumerated">				
				<enumeratedOptionValue
			          command="-mmulticore -mcorea"
			          id="com.analog.gnu.toolchain.blackfin.c.linker.options.mcorea"
			          isDefault="true"
			          name="Core A (-mmulticore -mcorea)">
				</enumeratedOptionValue>
				<enumeratedOptionValue
			          command="-mmulticore -mcoreb"
			          id="com.analog.gnu.toolchain.blackfin.c.linker.options.mcoreb"
			          isDefault="false"
			          name="Core B (-mmulticore -mcoreb)">
				</enumeratedOptionValue>
 			</option>
         </tool>
         <tool
               id="com.analog.gnu.toolchain.blackfin.cpp.compiler.base"
               isAbstract="true"
               superClass="cdt.managedbuild.tool.gnu.cpp.compiler">
            <option
                  command="-mcpu=${value}"
                  id="com.analog.gnu.toolchain.blackfin.cpp.compiler.options.proc"
                  valueType="string">
            </option>
            <optionCategory
                id="com.analog.gnu.toolchain.blackfin.cpp.compiler.optioncategory.multicore"
                name="Multi-core"
                owner="com.analog.gnu.toolchain.blackfin.cpp.compiler.base">
                <enablement
                    type="ALL">
                 <checkOption
                       holderId="com.analog.gnu.toolchain.blackfin.cpp.compiler.base"
                       isRegex="true"
                       optionId="com.analog.gnu.toolchain.blackfin.cpp.compiler.options.proc"
                       value="bf60.*">
                 </checkOption>
              </enablement>
 			</optionCategory>
 			<option
 			    applicabilityCalculator="com.analog.gnu.toolchain.blackfin.core.MultiCoreApplicabilityCalculator"
				category="com.analog.gnu.toolchain.blackfin.cpp.compiler.optioncategory.multicore"
				command="-mmulticore -mcore${value}"
				id="com.analog.gnu.toolchain.blackfin.cpp.compiler.options.mcore"
				isAbstract="false"
				name="Target Core"
				resourceFilter="all"
				tip="Enable multicore support and build for a specified Core."
				valueHandler="com.analog.gnu.toolchain.blackfin.core.MultiCoreValueHandler"
				valueType="enumerated">
				<enumeratedOptionValue
                     command="-mmulticore -mcore0"
                     id="com.analog.gnu.toolchain.blackfin.cpp.compiler.options.mcore0"
                     isDefault="true"
                     name="Core 0 (-mmulticore -mcore0)">
				</enumeratedOptionValue>
				<enumeratedOptionValue
                     command="-mmulticore -mcore1"
                     id="com.analog.gnu.toolchain.blackfin.cpp.compiler.options.mcore1"
                     isDefault="false"
                     name="Core 1 (-mmulticore -mcore1)">
				</enumeratedOptionValue>
 			</option>
 			<optionCategory
                id="com.analog.gnu.toolchain.blackfin.cpp.compiler.optioncategory.multicore.bf561"
                name="Multi-core"
                owner="com.analog.gnu.toolchain.blackfin.cpp.compiler.base">
                <enablement
                    type="ALL">
                 <checkOption
                       holderId="com.analog.gnu.toolchain.blackfin.cpp.compiler.base"
                       isRegex="true"
                       optionId="com.analog.gnu.toolchain.blackfin.cpp.compiler.options.proc"
                       value="bf561.*">
                 </checkOption>
              </enablement>
 			</optionCategory>
 			<option
 			    applicabilityCalculator="com.analog.gnu.toolchain.blackfin.core.MultiCoreApplicabilityCalculator"
				category="com.analog.gnu.toolchain.blackfin.cpp.compiler.optioncategory.multicore.bf561"
				command="-mmulticore -mcore${value}"
				id="com.analog.gnu.toolchain.blackfin.cpp.compiler.options.mcore.bf561"
				isAbstract="false"
				name="Target Core"
				resourceFilter="all"
				tip="Enable multicore support and build for a specified Core."
				valueHandler="com.analog.gnu.toolchain.blackfin.core.MultiCoreValueHandler"
				valueType="enumerated">
				<enumeratedOptionValue
                     command="-mmulticore -mcorea"
                     id="com.analog.gnu.toolchain.blackfin.cpp.compiler.options.mcorea"
                     isDefault="true"
                     name="Core A (-mmulticore -mcorea)">
				</enumeratedOptionValue>
				<enumeratedOptionValue
                     command="-mmulticore -mcoreb"
                     id="com.analog.gnu.toolchain.blackfin.cpp.compiler.options.mcoreb"
                     isDefault="false"
                     name="Core B (-mmulticore -mcoreb)">
				</enumeratedOptionValue>
 			</option>
         </tool>
         <tool
               id="com.analog.gnu.toolchain.blackfin.cpp.linker.base"
               isAbstract="true"
               superClass="cdt.managedbuild.tool.gnu.cpp.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
            <option
                  command="-mcpu=${value}"
                  id="com.analog.gnu.toolchain.blackfin.cpp.linker.options.proc"
                  valueType="string">
            </option>
 			<option
 			    applicabilityCalculator="com.analog.gnu.toolchain.blackfin.core.BF60XApplicabilityCalculator"
				command="-mmulticore -mcore${value}"
				id="com.analog.gnu.toolchain.blackfin.cpp.linker.options.mcore"
				isAbstract="false"
				name="Target Core"
				resourceFilter="all"
				tip="Enable multicore support and build for a specified Core."
				valueType="enumerated">
				<enumeratedOptionValue
                     command="-mmulticore -mcore0"
                     id="com.analog.gnu.toolchain.blackfin.cpp.linker.options.mcore0"
                     isDefault="true"
                     name="Core 0 (-mmulticore -mcore0)">
				</enumeratedOptionValue>
				<enumeratedOptionValue
                     command="-mmulticore -mcore1"
                     id="com.analog.gnu.toolchain.blackfin.cpp.linker.options.mcore1"
                     isDefault="false"
                     name="Core 1 (-mmulticore -mcore1)">
				</enumeratedOptionValue>
			</option>
			<option
 			    applicabilityCalculator="com.analog.gnu.toolchain.blackfin.core.BF561ApplicabilityCalculator"
				command="-mmulticore -mcore${value}"
				id="com.analog.gnu.toolchain.blackfin.cpp.linker.options.mcore.bf561"
				isAbstract="false"
				name="Target Core"
				resourceFilter="all"
				tip="Enable multicore support and build for a specified Core."
				valueType="enumerated">				
				<enumeratedOptionValue
                     command="-mmulticore -mcorea"
                     id="com.analog.gnu.toolchain.blackfin.cpp.linker.options.mcorea"
                     isDefault="true"
                     name="Core A (-mmulticore -mcorea)">
				</enumeratedOptionValue>
				<enumeratedOptionValue
                     command="-mmulticore -mcoreb"
                     id="com.analog.gnu.toolchain.blackfin.cpp.linker.options.mcoreb"
                     isDefault="false"
                     name="Core B (-mmulticore -mcoreb)">
				</enumeratedOptionValue>
 			</option>
         </tool>
         <tool
               id="com.analog.gnu.toolchain.blackfin.ldr.base"
               isAbstract="true"
               superClass="com.analog.gnu.toolchain.blackfin.tool.ldr">
            <option
                  command="--target ${value}"
                  id="com.analog.gnu.toolchain.blackfin.ldr.options.proc"
                  valueType="string">
            </option>
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.base"
            name="Blackfin Bare Metal GNU Toolchain (bfin-elf)"
            superClass="com.analog.gnu.toolchain.blackfin.bfin"
            targetTool="cdt.managedbuild.tool.gnu.c.linker;cdt.managedbuild.tool.gnu.cpp.linker;cdt.managedbuild.tool.gnu.archiver">
         <tool
               command="bfin-elf-ar"
               id="com.analog.gnu.toolchain.blackfin.elf.archiver"
               name="Blackfin ELF Archiver"
               superClass="com.analog.gnu.toolchain.blackfin.archiver.base">
         </tool>
         <tool
               command="bfin-elf-as"
               id="com.analog.gnu.toolchain.blackfin.elf.assembler"
               name="Blackfin ELF Assembler"
               superClass="com.analog.gnu.toolchain.blackfin.assembler.base">
         </tool>
         <tool
               command="bfin-elf-gcc"
               id="com.analog.gnu.toolchain.blackfin.elf.c.compiler"
               name="Blackfin ELF C Compiler"
               superClass="com.analog.gnu.toolchain.blackfin.c.compiler.base">
            <inputType
                  id="com.analog.gnu.toolchain.blackfin.elf.c.input"
                  scannerConfigDiscoveryProfileId="com.analog.gnu.toolchain.blackfin.Blackfin_ELF_GCCManagedMakePerProjectProfileC"
                  superClass="cdt.managedbuild.tool.gnu.c.compiler.input">
            </inputType>
         </tool>
         <tool
               command="bfin-elf-gcc"
               id="com.analog.gnu.toolchain.blackfin.elf.c.linker"
               name="Blackfin ELF C Linker"
               superClass="com.analog.gnu.toolchain.blackfin.c.linker.base">
         </tool>
         <tool
               command="bfin-elf-g++"
               id="com.analog.gnu.toolchain.blackfin.elf.cpp.compiler"
               name="Blackfin ELF C++ Compiler"
               superClass="com.analog.gnu.toolchain.blackfin.cpp.compiler.base">
            <inputType
                  id="com.analog.gnu.toolchain.blackfin.elf.cpp.input"
                  scannerConfigDiscoveryProfileId="com.analog.gnu.toolchain.blackfin.Blackfin_ELF_GCCManagedMakePerProjectProfileCPP"
                  superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input">
            </inputType>
         </tool>
         <tool
               command="bfin-elf-g++"
               id="com.analog.gnu.toolchain.blackfin.elf.cpp.linker"
               name="Blackfin ELF C++ Linker"
               superClass="com.analog.gnu.toolchain.blackfin.cpp.linker.base">
         </tool>
         <tool
               command="bfin-elf-ldr"
               id="com.analog.gnu.toolchain.blackfin.elf.ldr.base"
               isAbstract="false"
               superClass="com.analog.gnu.toolchain.blackfin.ldr.base">
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.base"
            name="Blackfin Linux FLAT GNU Toolchain (bfin-uclinux)"
            superClass="com.analog.gnu.toolchain.blackfin.bfin"
            targetTool="cdt.managedbuild.tool.gnu.c.linker;cdt.managedbuild.tool.gnu.cpp.linker;cdt.managedbuild.tool.gnu.archiver">
         <tool
               command="bfin-uclinux-ar"
               id="com.analog.gnu.toolchain.blackfin.uclinux.archiver"
               name="Blackfin FLAT Archiver"
               superClass="com.analog.gnu.toolchain.blackfin.archiver.base">
         </tool>
         <tool
               command="bfin-uclinux-as"
               id="com.analog.gnu.toolchain.blackfin.uclinux.assembler"
               name="Blackfin FLAT Assembler"
               superClass="com.analog.gnu.toolchain.blackfin.assembler.base">
         </tool>
         <tool
               command="bfin-uclinux-gcc"
               id="com.analog.gnu.toolchain.blackfin.uclinux.c.compiler"
               name="Blackfin FLAT C Compiler"
               superClass="com.analog.gnu.toolchain.blackfin.c.compiler.base">
            <inputType
                  id="com.analog.gnu.toolchain.blackfin.uclinux.c.input"
                  scannerConfigDiscoveryProfileId="com.analog.gnu.toolchain.blackfin.Blackfin_FLAT_GCCManagedMakePerProjectProfileC"
                  superClass="cdt.managedbuild.tool.gnu.c.compiler.input">
            </inputType>
         </tool>
         <tool
               command="bfin-uclinux-gcc"
               id="com.analog.gnu.toolchain.blackfin.uclinux.c.linker"
               name="Blackfin FLAT C Linker"
               superClass="com.analog.gnu.toolchain.blackfin.c.linker.base">
            <option
                  category="gnu.c.link.category.general"
                  command="-elf2flt"
                  defaultValue="true"
                  id="com.analog.gnu.toolchain.blackfin.uclinux.c.linker.option.elf2flt"
                  name="Build FLAT binaries (-elf2flt)"
                  valueType="boolean">
            </option>
         </tool>
         <tool
               command="bfin-uclinux-g++"
               id="com.analog.gnu.toolchain.blackfin.uclinux.cpp.compiler"
               name="Blackfin FLAT C++ Compiler"
               superClass="com.analog.gnu.toolchain.blackfin.cpp.compiler.base">
            <inputType
                  id="com.analog.gnu.toolchain.blackfin.uclinux.cpp.input"
                  scannerConfigDiscoveryProfileId="com.analog.gnu.toolchain.blackfin.Blackfin_FLAT_GCCManagedMakePerProjectProfileCPP"
                  superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input">
            </inputType>
         </tool>
         <tool
               command="bfin-uclinux-g++"
               id="com.analog.gnu.toolchain.blackfin.uclinux.cpp.linker"
               name="Blackfin FLAT C++ Linker"
               superClass="com.analog.gnu.toolchain.blackfin.cpp.linker.base">
            <option
                  category="gnu.cpp.link.category.options"
                  command="-elf2flt"
                  defaultValue="true"
                  id="com.analog.gnu.toolchain.blackfin.uclinux.cpp.linker.option.elf2flt"
                  name="Build FLAT binaries (-elf2flt)"
                  valueType="boolean">
            </option>
         </tool>
         <tool
               command="bfin-uclinux-ldr"
               id="com.analog.gnu.toolchain.blackfin.uclinux.ldr"
               isAbstract="false"
               superClass="com.analog.gnu.toolchain.blackfin.ldr.base">
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base"
            name="Blackfin Linux FDPIC GNU Toolchain (bfin-linux-uclibc)"
            superClass="com.analog.gnu.toolchain.blackfin.bfin"
            targetTool="cdt.managedbuild.tool.gnu.c.linker;cdt.managedbuild.tool.gnu.cpp.linker;cdt.managedbuild.tool.gnu.archiver">
         <tool
               command="bfin-linux-uclibc-ar"
               id="com.analog.gnu.toolchain.blackfin.linux.uclibc.archiver"
               name="Blackfin FDPIC Archiver"
               superClass="com.analog.gnu.toolchain.blackfin.archiver.base">
         </tool>
         <tool
               command="bfin-linux-uclibc-as"
               id="com.analog.gnu.toolchain.blackfin.linux.uclibc.assembler"
               name="Blackfin FDPIC Assembler"
               superClass="com.analog.gnu.toolchain.blackfin.assembler.base">
         </tool>
         <tool
               command="bfin-linux-uclibc-gcc"
               id="com.analog.gnu.toolchain.blackfin.linux.uclibc.c.compiler"
               name="Blackfin FDPIC C Compiler"
               superClass="com.analog.gnu.toolchain.blackfin.c.compiler.base">
            <inputType
                  id="com.analog.gnu.toolchain.blackfin.linux.uclibc.c.input"
                  scannerConfigDiscoveryProfileId="com.analog.gnu.toolchain.blackfin.Blackfin_FDPIC_GCCManagedMakePerProjectProfileC"
                  superClass="cdt.managedbuild.tool.gnu.c.compiler.input">
            </inputType>
         </tool>
         <tool
               command="bfin-linux-uclibc-gcc"
               id="com.analog.gnu.toolchain.blackfin.linux.uclibc.c.linker"
               name="Blackfin FDPIC C Linker"
               superClass="com.analog.gnu.toolchain.blackfin.c.linker.base">
         </tool>
         <tool
               command="bfin-linux-uclibc-g++"
               id="com.analog.gnu.toolchain.blackfin.linux.uclibc.cpp.compiler"
               name="Blackfin FDPIC C++ Compiler"
               superClass="com.analog.gnu.toolchain.blackfin.cpp.compiler.base">
            <inputType
                  id="com.analog.gnu.toolchain.blackfin.linux.uclibc.cpp.input"
                  scannerConfigDiscoveryProfileId="com.analog.gnu.toolchain.blackfin.Blackfin_FDPIC_GCCManagedMakePerProjectProfileCPP"
                  superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input">
            </inputType>
         </tool>
         <tool
               command="bfin-linux-uclibc-g++"
               id="com.analog.gnu.toolchain.blackfin.linux.uclibc.cpp.linker"
               name="Blackfin FDPIC C++ Linker"
               superClass="com.analog.gnu.toolchain.blackfin.cpp.linker.base">
         </tool>
         <tool
               command="bfin-linux-uclibc-ldr"
               id="com.analog.gnu.toolchain.blackfin.linux.uclibc.ldr"
               isAbstract="false"
               superClass="com.analog.gnu.toolchain.blackfin.ldr.base">
         </tool>
      </toolChain>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="com.analog.gnu.toolchain.blackfin.target.bfin.elf.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.elf.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.exe.debug"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.elf.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.exe.release"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.base">
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="com.analog.gnu.toolchain.blackfin.target.bfin.elf.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.elf.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.lib.debug"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.elf.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.lib.release"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.base">
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="com.analog.gnu.toolchain.blackfin.target.bfin.uclinux.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.uclinux.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.exe.debug"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.uclinux.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.exe.release"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.base">
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="com.analog.gnu.toolchain.blackfin.target.bfin.uclinux.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.uclinux.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.lib.debug"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.uclinux.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.lib.release"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.uclinux.base">
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="com.analog.gnu.toolchain.blackfin.target.bfin.linux.uclibc.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.linux.uclibc.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.exe.debug"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.linux.uclibc.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.exe.release"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base">
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="com.analog.gnu.toolchain.blackfin.target.bfin.linux.uclibc.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.linux.uclibc.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.lib.debug"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.linux.uclibc.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.lib.release"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base">
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="com.analog.gnu.toolchain.blackfin.target.bfin.linux.uclibc.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.linux.uclibc.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.so.debug"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.linux.uclibc.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.so.release"
                  superClass="com.analog.gnu.toolchain.blackfin.toolchain.bfin.linux.uclibc.base">
            </toolChain>
         </configuration>
      </projectType>
   </extension>
   <extension
         id="Blackfin_ELF_GCCManagedMakePerProjectProfileC"
         name="Blackfin ELF GNU C/C++ managed make per project SCD profile"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">
      <scannerInfoCollector
            class="com.analog.gnu.toolchain.blackfin.scanner.DefaultGCCScannerInfoCollector"
            scope="project">
      </scannerInfoCollector>
      <buildOutputProvider>
         <open></open>
         <scannerInfoConsoleParser
               class="com.analog.gnu.toolchain.blackfin.scanner.ManagedGCCScannerInfoConsoleParser">
         </scannerInfoConsoleParser>
      </buildOutputProvider>
      <scannerInfoProvider
            providerId="specsFile">
         <run
               arguments="-E -P -v -dD ${plugin_state_location}/specs.c"
               class="org.eclipse.cdt.make.internal.core.scannerconfig2.GCCSpecsRunSIProvider"
               command="bfin-elf-gcc">
         </run>
         <scannerInfoConsoleParser
               class="org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser">
         </scannerInfoConsoleParser>
      </scannerInfoProvider>
   </extension>
   <extension
         id="Blackfin_ELF_GCCManagedMakePerProjectProfileCPP"
         name="Blackfin ELF GNU C/C++ managed make per project SCD profile"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">
      <scannerInfoCollector
            class="com.analog.gnu.toolchain.blackfin.scanner.DefaultGCCScannerInfoCollector"
            scope="project">
      </scannerInfoCollector>
      <buildOutputProvider>
         <open></open>
         <scannerInfoConsoleParser
               class="com.analog.gnu.toolchain.blackfin.scanner.ManagedGCCScannerInfoConsoleParser">
         </scannerInfoConsoleParser>
      </buildOutputProvider>
      <scannerInfoProvider
            providerId="specsFile">
         <run
               arguments="-E -P -v -dD ${plugin_state_location}/specs.cpp"
               class="org.eclipse.cdt.make.internal.core.scannerconfig2.GCCSpecsRunSIProvider"
               command="bfin-elf-g++">
         </run>
         <scannerInfoConsoleParser
               class="org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser">
         </scannerInfoConsoleParser>
      </scannerInfoProvider>
   </extension>
   <extension
         id="Blackfin_FLAT_GCCManagedMakePerProjectProfileC"
         name="Blackfin FLAT GNU C/C++ managed make per project SCD profile"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">
      <scannerInfoCollector
            class="com.analog.gnu.toolchain.blackfin.scanner.DefaultGCCScannerInfoCollector"
            scope="project">
      </scannerInfoCollector>
      <buildOutputProvider>
         <open></open>
         <scannerInfoConsoleParser
               class="com.analog.gnu.toolchain.blackfin.scanner.ManagedGCCScannerInfoConsoleParser">
         </scannerInfoConsoleParser>
      </buildOutputProvider>
      <scannerInfoProvider
            providerId="specsFile">
         <run
               arguments="-E -P -v -dD ${plugin_state_location}/specs.c"
               class="org.eclipse.cdt.make.internal.core.scannerconfig2.GCCSpecsRunSIProvider"
               command="bfin-uclinux-gcc">
         </run>
         <scannerInfoConsoleParser
               class="org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser">
         </scannerInfoConsoleParser>
      </scannerInfoProvider>
   </extension>
   <extension
         id="Blackfin_FLAT_GCCManagedMakePerProjectProfileCPP"
         name="Blackfin FLAT GNU C/C++ managed make per project SCD profile"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">
      <scannerInfoCollector
            class="com.analog.gnu.toolchain.blackfin.scanner.DefaultGCCScannerInfoCollector"
            scope="project">
      </scannerInfoCollector>
      <buildOutputProvider>
         <open></open>
         <scannerInfoConsoleParser
               class="com.analog.gnu.toolchain.blackfin.scanner.ManagedGCCScannerInfoConsoleParser">
         </scannerInfoConsoleParser>
      </buildOutputProvider>
      <scannerInfoProvider
            providerId="specsFile">
         <run
               arguments="-E -P -v -dD ${plugin_state_location}/specs.cpp"
               class="org.eclipse.cdt.make.internal.core.scannerconfig2.GCCSpecsRunSIProvider"
               command="bfin-uclinux-g++">
         </run>
         <scannerInfoConsoleParser
               class="org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser">
         </scannerInfoConsoleParser>
      </scannerInfoProvider>
   </extension>
   <extension
         id="Blackfin_FDPIC_GCCManagedMakePerProjectProfileC"
         name="Blackfin FDPIC GNU C/C++ managed make per project SCD profile"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">
      <scannerInfoCollector
            class="com.analog.gnu.toolchain.blackfin.scanner.DefaultGCCScannerInfoCollector"
            scope="project">
      </scannerInfoCollector>
      <buildOutputProvider>
         <open></open>
         <scannerInfoConsoleParser
               class="com.analog.gnu.toolchain.blackfin.scanner.ManagedGCCScannerInfoConsoleParser">
         </scannerInfoConsoleParser>
      </buildOutputProvider>
      <scannerInfoProvider
            providerId="specsFile">
         <run
               arguments="-E -P -v -dD ${plugin_state_location}/specs.c"
               class="org.eclipse.cdt.make.internal.core.scannerconfig2.GCCSpecsRunSIProvider"
               command="bfin-linux-uclibc-gcc">
         </run>
         <scannerInfoConsoleParser
               class="org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser">
         </scannerInfoConsoleParser>
      </scannerInfoProvider>
   </extension>
   <extension
         id="Blackfin_FDPIC_GCCManagedMakePerProjectProfileCPP"
         name="Blackfin FDPIC GNU C/C++ managed make per project SCD profile"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">
      <scannerInfoCollector
            class="com.analog.gnu.toolchain.blackfin.scanner.DefaultGCCScannerInfoCollector"
            scope="project">
      </scannerInfoCollector>
      <buildOutputProvider>
         <open></open>
         <scannerInfoConsoleParser
               class="com.analog.gnu.toolchain.blackfin.scanner.ManagedGCCScannerInfoConsoleParser">
         </scannerInfoConsoleParser>
      </buildOutputProvider>
      <scannerInfoProvider
            providerId="specsFile">
         <run
               arguments="-E -P -v -dD ${plugin_state_location}/specs.cpp"
               class="org.eclipse.cdt.make.internal.core.scannerconfig2.GCCSpecsRunSIProvider"
               command="bfin-linux-uclibc-g++">
         </run>
         <scannerInfoConsoleParser
               class="org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser">
         </scannerInfoConsoleParser>
      </scannerInfoProvider>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchConfigurationTypeImages">
      <launchConfigurationTypeImage
            configTypeID="gdb.app.elf.launchConfigurationType"
            icon="icons/obj16/vdsp.gif"
            id="gdb.app.elf.launchConfigurationTypeImage">
      </launchConfigurationTypeImage>
      <launchConfigurationTypeImage
            configTypeID="gdb.app.elf.sim.launchConfigurationType"
            icon="icons/obj16/vdsp.gif"
            id="gdb.app.elf.sim.launchConfigurationTypeImage">
      </launchConfigurationTypeImage>
      <launchConfigurationTypeImage
            configTypeID="gdb.kernel.elf.launchConfigurationType"
            icon="icons/obj16/vdsp.gif"
            id="gdb.kernel.elf.launchConfigurationTypeImage">
      </launchConfigurationTypeImage>
      <launchConfigurationTypeImage
            configTypeID="gdb.app.flat.launchConfigurationType"
            icon="icons/obj16/vdsp.gif"
            id="gdb.app.flat.launchConfigurationTypeImage">
      </launchConfigurationTypeImage>
      <launchConfigurationTypeImage
            configTypeID="gdb.kernel.flat.launchConfigurationType"
            icon="icons/obj16/vdsp.gif"
            id="gdb.kernel.flat.launchConfigurationTypeImage">
      </launchConfigurationTypeImage>      
      <launchConfigurationTypeImage
            configTypeID="gdb.app.fdpic.launchConfigurationType"
            icon="icons/obj16/vdsp.gif"
            id="gdb.app.fdpic.launchConfigurationTypeImage">
      </launchConfigurationTypeImage>      
   </extension>
   <extension
         point="org.eclipse.debug.core.launchConfigurationTypes">
      <launchConfigurationType
            delegate="com.analog.gnu.toolchain.blackfin.debug.gdbjtag.GDBJtagLaunchConfigurationDelegate"
            id="gdb.app.elf.launchConfigurationType"
            modes="debug"
            name="Blackfin GNU Toolchain Bare Metal Application (ELF) on JTAG Device"
            public="true"
            sourceLocatorId="org.eclipse.cdt.debug.core.sourceLocator"
            sourcePathComputerId="org.eclipse.cdt.debug.core.sourcePathComputer">
      </launchConfigurationType>
      <launchConfigurationType
            delegate="com.analog.gnu.toolchain.blackfin.debug.gdbjtag.GDBJtagLaunchConfigurationDelegate"
            id="gdb.app.elf.sim.launchConfigurationType"
            modes="debug"
            name="Blackfin GNU Toolchain Bare Metal Application (ELF) on Simulator"
            public="true"
            sourceLocatorId="org.eclipse.cdt.debug.core.sourceLocator"
            sourcePathComputerId="org.eclipse.cdt.debug.core.sourcePathComputer">
      </launchConfigurationType>      
      <launchConfigurationType
            delegate="com.analog.gnu.toolchain.blackfin.debug.gdbjtag.GDBJtagLaunchConfigurationDelegate"
            id="gdb.kernel.elf.launchConfigurationType"
            modes="debug"
            name="Blackfin GNU Toolchain Linux Kernel (ELF)"
            public="true"
            sourceLocatorId="org.eclipse.cdt.debug.core.sourceLocator"
            sourcePathComputerId="org.eclipse.cdt.debug.core.sourcePathComputer">
      </launchConfigurationType>          
      <launchConfigurationType
            delegate="com.analog.gnu.toolchain.blackfin.debug.gdbjtag.GDBJtagLaunchConfigurationDelegate"
            id="gdb.app.flat.launchConfigurationType"
            modes="debug"
            name="Blackfin GNU Toolchain Linux Application (FLAT)"
            public="true"
            sourceLocatorId="org.eclipse.cdt.debug.core.sourceLocator"
            sourcePathComputerId="org.eclipse.cdt.debug.core.sourcePathComputer">
      </launchConfigurationType>
      <launchConfigurationType
            delegate="com.analog.gnu.toolchain.blackfin.debug.gdbjtag.GDBJtagLaunchConfigurationDelegate"
            id="gdb.kernel.flat.launchConfigurationType"
            modes="debug"
            name="Blackfin GNU Toolchain Linux Kernel (FLAT)"
            public="true"
            sourceLocatorId="org.eclipse.cdt.debug.core.sourceLocator"
            sourcePathComputerId="org.eclipse.cdt.debug.core.sourcePathComputer">
      </launchConfigurationType>      
      <launchConfigurationType
            delegate="com.analog.gnu.toolchain.blackfin.debug.gdbjtag.GDBJtagLaunchConfigurationDelegate"
            id="gdb.app.fdpic.launchConfigurationType"
            modes="debug"
            name="Blackfin GNU Toolchain Linux Application (FDPIC)"
            public="true"
            sourceLocatorId="org.eclipse.cdt.debug.core.sourceLocator"
            sourcePathComputerId="org.eclipse.cdt.debug.core.sourcePathComputer">
      </launchConfigurationType>      
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchConfigurationTabGroups">
      <launchConfigurationTabGroup
            class="com.analog.gnu.toolchain.blackfin.debug.BlackfinDebugLaunchConfigurationTabGroup"
            id="gdb.app.elf.launchConfigurationTabGroup"
            type="gdb.app.elf.launchConfigurationType">
      </launchConfigurationTabGroup>
      <launchConfigurationTabGroup
            class="com.analog.gnu.toolchain.blackfin.debug.BlackfinDebugLaunchConfigurationTabGroup"
            id="gdb.app.elf.sim.launchConfigurationTabGroup"
            type="gdb.app.elf.sim.launchConfigurationType">
      </launchConfigurationTabGroup>
      <launchConfigurationTabGroup
            class="com.analog.gnu.toolchain.blackfin.debug.BlackfinDebugLaunchConfigurationTabGroup"
            id="gdb.kernel.elf.launchConfigurationTabGroup"
            type="gdb.kernel.elf.launchConfigurationType">
      </launchConfigurationTabGroup>                     
      <launchConfigurationTabGroup
            class="com.analog.gnu.toolchain.blackfin.debug.BlackfinDebugLaunchConfigurationTabGroup"
            id="gdb.app.flat.launchConfigurationTabGroup"
            type="gdb.app.flat.launchConfigurationType">
      </launchConfigurationTabGroup>
      <launchConfigurationTabGroup
            class="com.analog.gnu.toolchain.blackfin.debug.BlackfinDebugLaunchConfigurationTabGroup"
            id="gdb.kernel.flat.launchConfigurationTabGroup"
            type="gdb.kernel.flat.launchConfigurationType">
      </launchConfigurationTabGroup>      
      <launchConfigurationTabGroup
            class="com.analog.gnu.toolchain.blackfin.debug.BlackfinDebugLaunchConfigurationTabGroup"
            id="gdb.app.fdpic.launchConfigurationTabGroup"
            type="gdb.app.fdpic.launchConfigurationType">
      </launchConfigurationTabGroup>      
   </extension>

   <extension
         point="org.eclipse.debug.ui.launchShortcuts">
      <shortcut
            label="Blackfin GNU Toolchain Linux Application (FLAT)"
            icon="icons/obj16/vdsp.gif"
            modes="run, debug"
            class="com.analog.gnu.toolchain.blackfin.launcher.FLATLaunchShortcut"
            id="com.analog.gnu.toolchain.blackfin.FLATShortcut">
         <description
             mode="debug"
             description="Debugs a Blackfin Linux application (FLAT)"/>
         <description
             mode="run"
             description="Runs a Blackfin Linux application (FLAT)"/>
         <configurationType
               id="gdb.app.flat.launchConfigurationType">
         </configurationType>
            
         <contextualLaunch>
           <enablement>
             <with variable="selection">
               <count value="1"/>
               <iterate>
                   <or>
                     <instanceof value="org.eclipse.cdt.core.model.ICProject"/>
                     <test
                           forcePluginActivation="true"
                           property="com.analog.gnu.toolchain.blackfin.launch.isFLATExecutable"/>
                     <test
                           forcePluginActivation="true"
                           property="com.analog.gnu.toolchain.blackfin.launch.isFLATProject"/>
                     <and>
                       <instanceof value="org.eclipse.ui.IFileEditorInput"/>
                       <adapt type="org.eclipse.core.resources.IResource">
                         <adapt type="org.eclipse.cdt.core.model.ICElement"/>
                       </adapt>
                     </and>
                   </or>
               </iterate>
             </with>
           </enablement>
         </contextualLaunch>
    </shortcut>
   </extension>

   <extension
         point="org.eclipse.debug.ui.launchShortcuts">
      <shortcut
            label="Blackfin GNU Toolchain Linux Application (FDPIC)"
            icon="icons/obj16/vdsp.gif"
            modes="run, debug"
            class="com.analog.gnu.toolchain.blackfin.launcher.FDPICLaunchShortcut"
            id="com.analog.gnu.toolchain.blackfin.FDPICShortcut">
         <description
             mode="debug"
             description="Debugs a Blackfin Linux application (FDPIC)"/>
         <description
             mode="run"
             description="Runs a Blackfin Linux application (FDPIC)"/>
         <configurationType
               id="gdb.app.fdpic.launchConfigurationType">
         </configurationType>
            
         <contextualLaunch>
           <enablement>
             <with variable="selection">
               <count value="1"/>
               <iterate>
                   <or>
                     <instanceof value="org.eclipse.cdt.core.model.ICProject"/>
                     <test
                           forcePluginActivation="true"
                           property="com.analog.gnu.toolchain.blackfin.launch.isFDPICExecutable"/>
                     <test
                           forcePluginActivation="true"
                           property="com.analog.gnu.toolchain.blackfin.launch.isFDPICProject"/>
                     <and>
                       <instanceof value="org.eclipse.ui.IFileEditorInput"/>
                       <adapt type="org.eclipse.core.resources.IResource">
                         <adapt type="org.eclipse.cdt.core.model.ICElement"/>
                       </adapt>
                     </and>
                   </or>
               </iterate>
             </with>
           </enablement>
         </contextualLaunch>
    </shortcut>
   </extension>

   <extension
         point="org.eclipse.debug.ui.launchShortcuts">
      <shortcut
            label="Blackfin GNU Toolchain Bare Metal Application (ELF) on JTAG Device"
            icon="icons/obj16/vdsp.gif"
            modes="run, debug"
            class="com.analog.gnu.toolchain.blackfin.launcher.ELFLaunchShortcut"
            id="com.analog.gnu.toolchain.blackfin.ELFShortcut">
         <description
             mode="debug"
             description="Debugs a bare metal Blackfin application (ELF) on a JTAG Device"/>
         <description
             mode="run"
             description="Runs a bare metal Blackfin application (ELF) on a JTAG Device"/>
         <configurationType
               id="gdb.app.elf.launchConfigurationType">
         </configurationType>
            
         <contextualLaunch>
           <enablement>
             <with variable="selection">
               <count value="1"/>
               <iterate>
                   <or>
                     <instanceof value="org.eclipse.cdt.core.model.ICProject"/>
                     <test
                           forcePluginActivation="true"
                           property="com.analog.gnu.toolchain.blackfin.launch.isELFExecutable"/>
                     <test
                           forcePluginActivation="true"
                           property="com.analog.gnu.toolchain.blackfin.launch.isELFProject"/>
                     <and>
                       <instanceof value="org.eclipse.ui.IFileEditorInput"/>
                       <adapt type="org.eclipse.core.resources.IResource">
                         <adapt type="org.eclipse.cdt.core.model.ICElement"/>
                       </adapt>
                     </and>
                   </or>
               </iterate>
             </with>
           </enablement>
         </contextualLaunch>
    </shortcut>
   </extension>

   <extension
         point="org.eclipse.debug.ui.launchShortcuts">
      <shortcut
            label="Blackfin GNU Toolchain Bare Metal Application (ELF) on Simulator"
            icon="icons/obj16/vdsp.gif"
            modes="run, debug"
            class="com.analog.gnu.toolchain.blackfin.launcher.ELFSimLaunchShortcut"
            id="com.analog.gnu.toolchain.blackfin.ELFSimShortcut">
         <description
             mode="debug"
             description="Debugs a bare metal Blackfin application (ELF) on a simulator"/>
         <description
             mode="run"
             description="Runs a bare metal Blackfin application (ELF) on a simulator"/>
         <configurationType
               id="gdb.app.elf.sim.launchConfigurationType">
         </configurationType>
            
         <contextualLaunch>
           <enablement>
             <with variable="selection">
               <count value="1"/>
               <iterate>
                   <or>
                     <instanceof value="org.eclipse.cdt.core.model.ICProject"/>
                     <test
                           forcePluginActivation="true"
                           property="com.analog.gnu.toolchain.blackfin.launch.isELFExecutable"/>
                     <test
                           forcePluginActivation="true"
                           property="com.analog.gnu.toolchain.blackfin.launch.isELFProject"/>
                     <and>
                       <instanceof value="org.eclipse.ui.IFileEditorInput"/>
                       <adapt type="org.eclipse.core.resources.IResource">
                         <adapt type="org.eclipse.cdt.core.model.ICElement"/>
                       </adapt>
                     </and>
                   </or>
               </iterate>
             </with>
           </enablement>
         </contextualLaunch>
    </shortcut>
   </extension>
   
   <extension point="org.eclipse.core.expressions.propertyTesters">
      <propertyTester
            namespace="com.analog.gnu.toolchain.blackfin.launch"
            properties="isFLATExecutable,isFDPICExecutable,isELFExecutable,isFLATProject,isFDPICProject,isELFProject"
            type="org.eclipse.core.runtime.IAdaptable"
            class="com.analog.gnu.toolchain.blackfin.launcher.LaunchPropertyTester"
            id="com.analog.gnu.toolchain.launch.PropertyTester">
      </propertyTester>
   </extension>

   <extension
         point="org.eclipse.cdt.managedbuilder.ui.newWizardPages">
      <wizardPage
            ID="com.analog.gnu.toolchain.blackfin.build.ProcessorPage"
            operationClass="com.analog.gnu.toolchain.blackfin.build.ProcessorPageRunnable"
            pageClass="com.analog.gnu.toolchain.blackfin.build.ProcessorPage">
         <projectType
               projectTypeID="com.analog.gnu.toolchain.blackfin.target.bfin.elf.exe">
         </projectType>
         <projectType
               projectTypeID="com.analog.gnu.toolchain.blackfin.target.bfin.linux.uclibc.exe">
         </projectType>
         <projectType
               projectTypeID="com.analog.gnu.toolchain.blackfin.target.bfin.uclinux.exe">
         </projectType>                  
         <nature
               natureID="org.eclipse.cdt.core.cnature">
         </nature>
         <nature
               natureID="org.eclipse.cdt.core.ccnature">
         </nature>
      </wizardPage>
   </extension>

   <extension
         point="org.eclipse.cdt.ui.cPropertyTab">
      <tab
            class="com.analog.gnu.toolchain.blackfin.build.ProcessorSettingsTab"
            icon="icons/obj16/chip_1.png"
            name="Processor Settings"
            parent="org.eclipse.cdt.managedbuilder.ui.properties.Page_BuildSettings"
            tooltip="Allows selection of the processor family, model and silicon revision for this project."
            weight="002">
      </tab>
   </extension>
      
</plugin>
