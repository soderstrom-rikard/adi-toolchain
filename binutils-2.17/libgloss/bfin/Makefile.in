#
#

DESTDIR =
VPATH = @srcdir@ @srcdir@/..
srcdir = @srcdir@
objdir = .
srcroot = $(srcdir)/../..
objroot = $(objdir)/../..
top_srcdir = @top_srcdir@

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@

bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =

SHELL =	/bin/sh

mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs

CC = @CC@

AS = @AS@
AR = @AR@
LD = @LD@
RANLIB = @RANLIB@

OBJDUMP = `if [ -f ${objroot}/../binutils/objdump ] ; \
	then echo ${objroot}/../binutils/objdump ; \
	else t='$(program_transform_name)'; echo objdump | sed -e $$t ; fi`
OBJCOPY = `if [ -f ${objroot}/../binutils/objcopy ] ; \
	then echo ${objroot}/../binutils/objcopy ; \
	else t='$(program_transform_name)'; echo objcopy | sed -e $$t ; fi`

OBJS		=
CFLAGS		=
SCRIPTS		=

# Here is all of the simulator stuff
SIM_SCRIPTS	=
SIM_LDFLAGS	=
SIM_BSP		= libsim.a
SIM_CRT0	= crt0.o
SIM_OBJS	= syscalls.o
SIM_TEST	= sim-test
SIM_INSTALL	= install-sim

# Here is all of the development board stuff
# BF531, BF532, BF533, BF537
BOARD_SCRIPTS	= bfin-common-sc.ld \
	bf522.ld bf523.ld bf524.ld bf525.ld bf526.ld bf527.ld \
	bf531.ld bf532.ld bf533.ld \
	bf534.ld bf536.ld bf537.ld \
	bf538.ld bf539.ld \
	bf542.ld bf544.ld bf547.ld bf548.ld bf549.ld \
	bf561.ld
BOARD_LDFLAGS	=
BOARD_BSP	= # We actually use libnosys.a
BOARD_CRT0S	= basiccrt.o
BOARD_OBJS	=
BOARD_TEST	=
BOARD_INSTALL	= install-board

# Host specific makefile fragment comes in here.
@host_makefile_frag@

INCLUDES += -I$(srcdir)/include
#
# build a test program for each target board. Just trying to get
# it to link is a good test, so we ignore all the errors for now.
#
all: ${SIM_CRT0} ${SIM_BSP} ${BOARD_CRT0S} ${BOARD_BSP}

#
# here's where we build the board support packages for each target
#
${SIM_BSP}: ${OBJS} ${SIM_OBJS}
	${AR} ${ARFLAGS} ${SIM_BSP} ${SIM_OBJS} ${OBJS}
	${RANLIB} ${SIM_BSP}

#
#
#
crt0.o: crt0.S
basiccrt.o: basiccrt.S

clean mostlyclean:
	rm -f a.out core *.i *.o ${SIM_BSP} ${BOARD_BSP}

distclean maintainer-clean realclean: clean
	rm -f Makefile config.status *~

.PHONY: install info install-info clean-info
install: ${SIM_INSTALL} ${BOARD_INSTALL}

install-sim:
	for x in ${SIM_CRT0} ${SIM_BSP} ${SIM_SCRIPTS}; do \
	 ${INSTALL_DATA} $$x $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/$$x; \
	done

install-board:
	for x in ${BOARD_CRT0S} ${BOARD_BSP}; do \
	 ${INSTALL_DATA} $$x $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/$$x; \
	done
	-if [ -z "${MULTISUBDIR}" ]; then \
	  for x in ${BOARD_SCRIPTS}; do \
	   ${INSTALL_DATA} ${srcdir}/$$x $(DESTDIR)${tooldir}/lib/$$x; \
	  done; \
	  ${mkinstalldirs} ${DESTDIR}${tooldir}/include; \
	  for i in ${srcdir}/include/*.h; do \
	   ${INSTALL_DATA} $$i ${DESTDIR}${tooldir}/include/`basename $$i`; \
	  done; \
	  ${mkinstalldirs} ${DESTDIR}${tooldir}/include/sys; \
	  for i in ${srcdir}/include/sys/*.h; do \
	   ${INSTALL_DATA} $$i ${DESTDIR}${tooldir}/include/sys/`basename $$i`; \
	  done; \
	else true; fi

doc:
info:
install-info:
clean-info:

Makefile: Makefile.in config.status @host_makefile_frag_path@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck
