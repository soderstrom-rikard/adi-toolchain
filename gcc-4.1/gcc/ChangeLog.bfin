2006-03-24  Bernd Schmidt  <bernd.schmidt@analog.com>

	Move over some patches from 3.4.

	* config/bfin/bfin.h (TARGET_CPP_CPU_BUILTINS): Define __ADSPBLACKFIN__.
	* config/bfin/bfin.c: Include "optabs.h".
	(enum blackfin_builtins): Expand with a lot of new codes.
	(bfin_init_builtins): Initialize fractional math builtins.
	(struct builtin_description): New struct.
	(bdesc_2arg, bdesc_arg): New arrays.
	(safe_vector_operand, bfin_expand_binop_builtin,
	bfin_expand_unop_builtin): New functions.
	(bfin_expand_builtin): Use them; add code to support fractional math
	builtins.

	* config/bfin/predicates.md (const01_operand, vec_shift_operand): New
	predicates.
	* config/bfin/bfin.md (UNSPEC_FRMUL, UNSPEC_FRTMUL): New constants.
	(ssaddsi3, sssubsi3, ssnegsi2, signbitssi2, smaxhi3, sminhi3, abshi2,
	neghi2, ssneghi2, signbitshi2, movhi_low2high, movhi_high2high,
	movhi_lwo2low, movhi_high2low, movhiv2hi_low, movhiv2hi_high,
	composev2hi, movv2hi_hi, movv2hi_hi_low, movv2hi_hi_high, ssaddhi3,
	sssubhi3, frmulhi3, frtmulhi3, ssaddv2hi3, sssubv2hi3, addsubv2hi3,
	subaddv2hi3, ssaddsubv2hi3, sssubaddv2hi3, sublohiv2hi3, subhilov2hi3,
	sssublohiv2hi3, sssubhilov2hi3, addlohiv2hi3, addhilov2hi3,
	ssaddlohiv2hi3, ssaddhilov2hi3, frmulv2hi, frtmulv2hi, mulhisi_ll,
	mulhisi_lh, mulhisi_hl, mulhisi_hh, ssnegv2hi2, ssashiftv2hi3,
	ssashifthi3, lshiftv2hi3, lshifthi3): New patterns.

	* rtl.def (SS_ASHIFT, SS_NEG): New codes.
	* doc/rtl.texi: Document them.

	2006-03-12  Bernd Schmidt  <bernd.schmidt@analog.com>
	* config/bfin/lib1funcs.asm (___umodsi3): Save RETS on the stack.

2006-03-23  Jie Zhang  <jie.zhang@analog.com>

	Apply
	2005-12-01  Nathan Sidwell  <nathan@codesourcery.com>
	* config/ms1/ms1.c (ms1_reorg_hazard): Don't count noop moves.
	* vec.h (VEC_block_remove): New.

2006-03-22  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.h (ASM_FORMAT_PRIVATE_NAME): Remove.

2006-03-21  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin-protos.h (bfin_dsp_memref_p): Declare.
	* config/bfin/bfin.c (bfin_dsp_memref_p): New function.
	(bfin_valid_reg_p): Test for pseudos explicitly and use only
	REGNO_MODE_CODE_OK_FOR_BASE_P.  New args MODE and OUTER_CODE; all
	callers changed.
	* config/bfin/bfin.h (PREG_P): Use P_REGNO_P.
	(IREG_P, P_REGNO_P, I_REGNO_P): New macros.
	(enum reg_class, REG_CLASS_CONTENTS): Add IPREGS.
	(BASE_REG_CLASS, REG_OK_FOR_BASE_P, REG_OK_FOR_INDEX_P,
	REGNO_OK_FOR_BASE_STRICT_P, REGNO_OK_FOR_BASE_NONSTRICT_P): Delete
	macros.
	(IREG_POSSIBLE_P, MODE_CODE_BASE_REG_CLASS,
	REGNO_MODE_CODE_OK_FOR_BASE_P): New macros.
	(REGNO_REG_CLASS): ARGP is in PREGS.
	* config/bfin/bfin.md (movhi_insn): Allow for addresses containing
	IREGS.
	(zero_extendhisi2, extendhisi2): Likewise; changed to define_and_split
	to deal with those addresses.
	* addresses.h: New file.
	* caller-save.c: Include "addresses.h".
	(init_caller_save): Use new base_reg_class function.
	* rtl-factoring.c: Include "addresses.h".
	(recompute_gain_for_pattern_seq): Use new function ok_for_base_p_1.
	* recog.c: Include "addresses.h".
	(preprocess_constraints): Use new base_reg_class function.
	* regrename.c: Include "addresses.h".
	(scan_rtx_address): Use new regno_ok_for_base_p and base_reg_class
	functions.  Keep track of a new var INDEX_CODE to compute valid
	classes.
	(replace_oldest_value_addr): Likewise.
	(replace_oldest_value_mem): Use base_reg_class.
	* reload.c: Include "addresses.h".
	(REGNO_MODE_OK_FOR_BASE_P, REG_MODE_OK_FOR_BASE_P): Delete macros.
	(find_reloads): Use new base_reg_class function.
	(find_reloads_address): Likewise; also use regno_ok_for_base_p.
	(find_reloads_address_1): Likewise. New args OUTER_CODE and INDEX_CODE;
	all callers and prototype changed.
	* reload1.c: Include "addresses.h".
	(maybe_fix_stack_asms): Use base_reg_class.
	* regclass.c: Include "addresses.h".
	(ok_for_index_p_nonstrict, ok_for_base_p_nonstrict): New functions.
	(init_reg_autoinc): Use new base_reg_class function.
	(record_reg_classes): Likewise.
	(record_address_regs): Delete arg CLASS; add args CONTEXT, MODE,
	OUTER_CODE and INDEX_CODE.  All callers and prototype changed.
	Use new args to compute necessary class.

	* Makefile.in (regclass.o, reload.o, reload1.o, caller-save.o, recog.o,
	regrename.o, rtl-factoring.o): Update dependencies.
	* doc/tm.texi (MODE_CODE_BASE_REG_CLASS): Document.
	(REGNO_MODE_CODE_OK_FOR_BASE_P): Likewise.
	(REG_OK_FOR_BASE_P, REG_MODE_OK_FOR_BASE_P, REG_MODE_OK_FOR_REG_BASE_P,
	REG_OK_FOR_INDEX_P): Delete documentation.

2006-03-15  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.h (LIBGCC_SPEC): Let libbffastfp override libgcc
	if -mfast-fp.
	* config/bfin/bfin.opt (mfast-fp): Add.
	* doc/invoke.texi (Option Summary): Mention -mfast-fp.
	(Blackfin Options): Document -mfast-fp.

2006-03-11  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/uclinux.h: Define _GNU_SOURCE in CPLUSPLUS_CPP_SPEC.
