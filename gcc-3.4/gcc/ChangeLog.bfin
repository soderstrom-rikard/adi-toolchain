2004-11-18  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin-protos.h (symbolic_or_const_operand): Renamed from
	symbolic_or_const_operand_p.
	(extract_const_double, output_symbolic_address, output_load_immediate,
	reg_or_16bit_operand): Delete.
	(split_load_immediate): New.
	* config/bfin/bfin.c (symbolic_or_const_operand): Renamed from
	symbolic_or_const_operand_p; changed to use symbolic_operand.
	(print_operand): Add ability to take high- and lowparts of constants.
	(extract_const_double, output_symbolic_address, output_load_immediate,
	reg_or_16bit_operand): Delete.
	(shiftr_zero): Clean up.
	(split_load_immediate): New function, contains remains of
	output_load_immediate.
	* config/bfin/bfin.h (enum reg_class, REG_CLASS_NAMES,
	REG_CLASS_CONTENTS): Add NON_A_CC_REGS.
	* config/bfin/bfin.md (attr "length" default): Remove code for "mvi"
	insns.
	(movsi_high, movsi_low): Add lengths.
	(movbi, movqi, movhi, movsi, movsf): Don't call output_load_immediate,
	spell out alternatives and rely on splitters to handle complex cases.
	Clean up the constraints; no longer discourage use of "c" regs.
	(movsf splitter): New; code to convert CONST_DOUBLEs to CONST_INTs
	rewritten and moved here.
	(movsi splitter): Changed to handle all constants, not just symbolic
	ones.

	* config/bfin/bfin.h (MASK_ASM_DIR, TARGET_ASM_DIR): Delete macros.
	(TARGET_SWITCHES): Remove -masm-dir, -mno-asm-dir.
	(TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP): Use plain strings.
	(ASM_INIT, ASM_LONG, ASM_SHORT, ASM_BYTE, ASM_SPACE): Delete macros.
	(ASM_OUTPUT_LOCAL): Remove code for -masm-dir.
	(ASM_OUTPUT_BYTE, ASM_OUTPUT_CHAR, ASM_OUTPUT_SHORT, ASM_OUTPUT_INT,
	ASM_OUTPUT_ASCII, ASM_OUTPUT_FLOAT, ASM_OUTPUT_DOUBLE): Delete unused
	macros.
	* config/bfin/bfin.c (asm_output_skip, asm_output_ascii): Delete
	unused functions.
	* config/bfin/bfin-protos.h (asm_output_skip, asm_output_ascii):
	Delete.

2004-11-17  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (extendsidi2, zero_extendsidi2): Generate valid
	assembler instructions.

	* config/bfin/bfin.md (symbolic load splitter): New.
	(movstricthi, movsi_high, movsi_low): New patterns.
	* config/bfin/bfin-protos.h (symbolic_operand): Renamed from
	symbolic_operand_p, which wasn't defined anywhere.
	* config/bfin/bfin.h (PREDICATE_CODES): Add symbolic_operand.
	* config/bfin/bfin.c (symbolic_operand): New function.

	* config/bfin/t-bfin (LANGUAGES): Delete.
	* config/bfin/t-bfin-elf (LANGUAGES): Likewise.

	* config/bfin/bfin.md (andsi3_insn): Don't accept any single bit
	constant, require a 1 for the split alternative.

2004-11-16  Bernd Schmidt  <bernd.schmidt@analog.com>

	* combine.c (simplify_and_const_int): Try to turn XOR inside a shift
	into a NOT.
	* ifcvt.c (condition_clobbered): New static variable.
	(note_clobbers_of_cond, sequence_clobbers_condition_p): New static
	functions.
	(noce_try_cmove_arith): Use sequence_clobbers_condition_p.
	* config/bfin/bfin.c (rhs_andsi3_operand): Accept a few more constants.
	(cc_operand): Hard regs aren't unique.
	* config/bfin/bfin.h (CONST_OK_FOR_16UBIT_IMM_P): New.
	(CONST_OK_FOR_K): Add 16 bit immediates.
	(CONST_OK_FOR_M): New macro.
	(CONSTRAINT_LEN, CONST_OK_FOR_CONSTRAINT_P): 'M1' and 'M2' are 8 bit
	and 16 bit masks.  'L' renamed from EXTRA_CONSTRAINT's 'Q'.
	(EXTRA_CONSTRAINT): Delete.
	* config/bfin/bfin.md (bittst, not_bittst): Previously unnamed
	patterns.  Changed to use comparison with zero in both patterns.
	(bit_extract, not_bit_extract): New patterns.
	(andsi_insn): Now a define_and_split; handle more cases.  Show that
	it clobbers CC.
	(andsi3): Generate additional CC clobber.
	(commented out bittst peepholes): Delete.

2004-11-14  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (CONST_16BIT_IMM_P, CONST_7BIT_IMM_P,
	CONST_3BIT_IMM_P, CONST_3UBIT_IMM_P, CONST_4BIT_IMM_P,
	CONST_4UBIT_IMM_P, CONST_5BIT_IMM_P, CONST_18UBIT_IMM_P): Lose the
	casts.
	(CONST_7NBIT_IMM_P): New macro.
	(CONSTRAINT_LEN, CONST_OK_FOR_P, CONST_OK_FOR_K): New macros.
	(CONST_OK_FOR_CONSTRAINT_P): Renamed from CONST_OK_FOR_LETTER_P.
	Change 'L' to 'Ku5', 'M' to 'Ks7', 'N' to 'Ku3', 'O' to 'Ks3', 'P'
	to 'P0'; add 'P1', 'P2', 'Kn7', 'Kn4' and 'Ks4'; remove previous
	meaning of 'K'. All users changed.
	* config/bfin/bfin.md (adddi3): Simplify using new Kn7 constraint.
	(useless constant sign_extend pattern): Delete.
	(lshrsi3): Renamed from lshrsi3_insn; useless expander deleted.

2004-11-12  Bernd Schmidt  <bernd.schmidt@analog.com>

	* genconfig.c (walk_insn_part): Look at match_dups inside a label_ref.
	* config/bfin/bfin.md (attempt at DSP instruction patterns): Delete the
	lot.

2004-11-11  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin-protos.h (bfin_frame_pointer_required): Renamed from
	frame_pointer_required.
	(bfin_initial_elimination_offset): Declare.
	* config/bfin/bfin.c (must_save_fp_p): New function.
	(bfin_frame_pointer_required): Renamed from frame_pointer_required.
	Simplify.
	(setup_incoming_varargs): Use arg pointer instead of FP.
	(bfin_initial_elimination_offset): New function.
	(add_to_sp): New function, broken out of bfin_expand_prologue and
	enhanced.
	(bfin_expand_prologue): Deal with frame pointer elimination properly.
	Use add_to_sp where possible.
	(bfin_expand_epilogue): Likewise.
	(fp_plus_const_operand): Also accept SP + constant.
	* config/bfin/bfin.h (FIRST_PARM_OFFSET): Always 0.
	(ARG_POINTER_REGNUM): Use REG_ARGP.
	(FRAME_POINTER_REQUIRED): Called function was renamed; adjust.
	(ELIMINABLE_REGS, CAN_ELIMINATE, INITIAL_ELIMINATION_OFFSET): New.
	(FIRST_PSEUDO_REGISTER): Bump to 44.
	(REGISTER_NAMES): New reg ARGP.
	(FIXED_REGISTERS, CALL_USED_REGISTERS): Likewise.
	(REG_ALLOC_ORDER): Eliminate uses of REG_NO; list all available regs.
	(REG_CLASS_CONTENTS): PROLOGUE_REGS contains RETS; PREGS and its
	superclasses contain the arg pointer.
	(REGNO_REG_CLASS): ARGP is of BASE_REG_CLASS.
	(REGNO_OK_FOR_INDEX_P, REG_OK_FOR_INDEX_P): Always 0.
	* config/bfin/bfin.md (REG_ARGP): New constant.
	(movsi_insn): Remove some superfluous constraints from prologue reg
	alternatives.

	* config/bfin/bfin.c (bfin_address_cost): Always return 1.
	* config/bfin/bfin.md (cbranch_with_nops): Always use length 6.
	(addsi3): Renamed from nameless pattern; remove useless expander.

2004-11-10  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_attribute_table): New.
	(enum e_funkind): Don't define here.
	(expand_interrupt_handler_prologue, expand_interrupt_handler_epilogue):
	Renamed from output_interrupt_handler_prologue and
	output_interrupt_handler_epilogue.  Changed to emit RTL.
	(funkind): Small cleanup.
	(expand_prologue_reg_save, expand_epilogue_reg_restore): Accept new arg
	SAVEALL.  All callers changed.  Save/restore all registers if SAVEALL
	is nonzero.
	(emit_link_insn): New, broken out of bfin_expand_prologue and modified
	to always use a nonzero argument for LINK, and not to use P1.
	(bfin_expand_prologue): Enable code to emit interrupt handler
	prologues.  Use emit_link_insn.
	(bfin_expand_epilogue): Enable code to emit interrupt handler
	epilogues.  Don't set RTX_FRAME_RELATED_P in the epilogue.
	(print_operand): Add 'x' modifier for accumulator registers.
	(hard_regno_mode_ok): Accept PDImode and nothing else for accumulators.
	Nothing accepts CCmode anymore.
	(TARGET_ATTRIBUTE_TABLE): New macro.
	(output_load_immediate): Don't abort when moving IREGS etc. to memory;
	it can be a stack push.
	* config/bfin/bfin.h (FIRST_PSEUDO_REGISTER): Bump to 43.
	(REGISTER_NAMES): Add registers used in interrupt handler prologues.
	(FIXED_REGISTERS, CALL_USED_REGISTERS): Likewise.
	(REG_ALLOC_ORDER): Add a few more REG_NO entries.
	(enum reg_class, REG_CLASS_NAMES, REG_CLASS_CONTENTS): Remove
	DREGS_PAIR.  Add EVEN_AREGS, EVEN_DREGS, ODD_AREGS, ODD_DREGS,
	PROLOGUE_REGS.
	(REG_CLASS_FROM_LETTER): Likewise.
	(REGNO_REG_CLASS): REG_RETS and beyond are PROLOGUE_REGS.
	(HARD_REGNO_NREGS): Adjust for accumulators and PDImode.
	(enum e_funkind): Define here.
	(LEGITIMATE_MODE_FOR_AUTOINC_P): New macro.
	(GO_IF_LEGITIMATE_ADDRESS): Use it.
	* config/bfin/bfin.md (REG_RETI, REG_RETX, REG_RETN, REG_RETE,
	REG_ASTAT, REG_SEQSTAT, REG_USP, UNSPEC_RETURN): New constants.
	(movbi, movqi, movhi, movsi, movsf): Disallow accumulator moves.
	(return_internal): Allow one operand to determine the type of return.
	All uses changed.
	* config/bfin/bfin-modes.def: New file.

	* config/bfin/bfin-protos.h: Delete PARAMS macros throughout.  Delete
	some duplicate prototypes.

2004-11-08  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (push_multiple_operation): Always initialize both
	first_preg_to_save and first_dreg_to_save.

2004-11-04  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (UNSPEC_CBRANCH_TAKEN, UNSPEC_CBRANCH_NOPS): New
	constants.
	(cbranch_with_nops, cbranch_predicted_taken): New patterns.
	* config/bfin/bfin.c (TARGET_MACHINE_DEPENDENT_REORG): Define.
	(loop_end): Delete function.
	(bfin_reorg, branch_dest, cbranch_predicted_taken_p): New
	functions.
	(asm_conditional_branch): Add N_NOPS and PREDICT_TAKEN arguments;
	change COND argument to OPERANDS arg. All callers changed.  Use
	INSN_ADDRESSES instead of length attribute.  Use PREDICT_TAKEN arg
	and cbranch_predicted_taken_p to determine whether to set the
	predicted bit. Emit nops when caller sets N_NOPS and emitted insn
	is a single conditional branch.
	(ccbranch_templates): Add more prediction hints.
	* config/bfin/bfin.h (MASK_CSYNC, TARGET_CSYNC): New macros.
	(TARGET_SWITCHES): Add -mcsync (default) and -mno-csync.
	* config/bfin/bfin-protos.h (asm_conditional_branch): Delete duplicate
	prototype; adjust remaining one to match new definition.

2004-11-03  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (ashlsi3_insn, lshrsi3_insn): New named patterns,
	each merged from two unnamed patterns performing the same operation.

2004-10-22  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (function_arg): Pass everything but variable size
	types in registers.
	(function_arg_partial_nregs): Exit early for variable size types.
	(bfin_va_arg): New function.
	* config/bfin/bfin-protos.h (bfin_va_arg): Declare it.
	* config/bfin/bfin.h (EXPAND_BUILTIN_VA_ARG,
	FUNCTION_ARG_PASS_BY_REFERENCE): New macros.

	* config/bfin/bfin.h (TRAMPOLINE_TEMPLATE, STATIC_CHAIN_REGNUM): Use
	call-clobbered registers for this sort of thing.

	* config/bfin/bfin.md (subdi3, negdi2): Invert sense of carry flag
	after subtraction.
	(subdi_di_zesidi, subdi_zesidi_di, subdi_di_sesidi, subdi_sesidi_di):
	Likewise.  Turn them into 2-operand insns and add scratch registers
	as required.  Make subdi_di_zesidi use subtraction instead of add.

2004-10-21  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/lib1funcs.asm (___udivsi3): Use unsigned comparison
	instead of signed.

2004-10-20  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_rets_rtx): New variable.
	(conditional_register_usage): Set it.
	(nr_dregs_to_save): Rename from saved_dregs_no and change to
	return number of regs to save.
	(nr_pregs_to_save): Likewise, from saved_pregs_no.
	(bfin_function_prologue, bfin_function_epilogue, save_area_size):
	Delete.
	(output_file_start): FUNCTION_ARG_REGISTERS is always defined.
	Lose local array, use arg_regs.
	(init_cumulative_args, function_arg, function_arg_advance,
	function_arg_partial_nregs, function_arg_regno_p): No longer
	conditional on FUNCTION_ARG_REGISTERS.
	(npregs, ndregs, is_leaf_function): Delete global variables.
	(expand_prologue_reg_save, expand_epilogue_reg_restore,
	bfin_expand_prologue, bfin_expand_epilogue,
	push_multiple_operation, pop_multiple_operation,
	output_push_multiple, output_pop_multiple): New functions.
	(first_preg_to_save, first_dreg_to_save): New static variables.
	* config/bfin/bfin.h (FIRST_PSEUDO_REGISTER): Now 36.
	(LAST_USER_DREG, LAST_USER_PREG): Don't define.
	(REGISTER_NAMES, FIXED_REGISTERS, CALL_USED_REGISTERS,
	REG_ALLOC_ORDER, REGNO_REG_CLASS): Add entry for RETS.
	(REG_CLASS_CONTENTS): ALL_REGS contains RETS.
	(TARGET_ASM_FUNCTION_PROLOGUE, TARGET_ASM_FUNCTION_EPILOGUE): Delete.
	* config/bfin/bfin.md (define_constants): Add REG_SP, REG_FP,
	REG_RETS.
	(prologue, epilogue, link, unlink, push_multiple, pop_multiple,
	return_internal): New patterns.  * config/bfin/bfin-protos.h
	(bfin_expand_prologue, bfin_expand_epilogue,
	push_multiple_operation, pop_multiple_operation): Declare.

	* config.gcc (bfin*-elf*, bfin*-*): Include "elfos.h" and
	"bfin/elf.h".
	* config/bfin/bfin.h: Don't include "defaults.h".
	(LOCAL_LABEL_PREFIX, ASM_WEAKEN_LABEL, ASM_OUTPUT_CASE_LABEL,
	ASM_GENERATE_INTERNAL_LABEL, TARGET_ASM_INTERNAL_LABEL,
	HANDLE_SYSV_PRAGMA, DWARF2_DEBUGGING_INFO, ASM_DECLARE_FUNCTION_SIZE,
	ASM_DECLARE_OBJECT_NAME, ASM_FINISH_DECLARE_OBJECT): Delete.
	* config/bfin/elf.h (TARGET_CPU_CPP_BUILTINS, ASM_SPEC, CC1_SPEC,
	LINK_SPEC, STARTFILE_SPEC): Delete.
	(LOCAL_LABEL_PREFIX, ASM_GENERATE_INTERNAL_LABEL): Define.

2004-10-18  Bernd Schmidt  <bernd.schmidt@analog.com>

	* cse.c (cse_insn): Stores in a libcall sequence can invalidate
	previous loads, namely those used to save parts of the argument area.

2004-10-17  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (output_load_immediate): Use byte accesses for
	BImode memory locations.
	* config/bfin/bfin.md (two useless extension patterns using subregs):
	Delete.
	(extendhisi2, zero_extendhisi2, extendqihi2, extendqisi2,
	zero_extendqihi2, zero_extendqisi2): Use valid_reg_operand as
	destination predicate.
	(movbi, zero_extendbisi2): New patterns.

	* config/bfin/bfin.c (struct pool_node, pool_vector, pool_vector_label,
	pool_size): Delete.
	(TARGET_MACHINE_DEPENDENT_REORG, PCREL_LD_RANGE, MAX_POOL_SIZE,
	MAX_COUNT_SI): Delete macros.
	(add_constant, dump_table, fixit, find_barrier, broken_move,
	replace_symbols_in_block, bfin_reorg): Delete functions.
	(init_cumulative_args): Delete TARGET_DEBUG_ARG and attribute regparm
	code.
	(function_arg_advance, function_arg): Likewise.
	(override_options): Delete minipool code.
	(nonmemory_or_sym_opernd): Delete.  All callers changed to use
	nonmemory_operand.
	* config/bfin/bfin-protos.h (bfin_reorg): Don't declare.
	(nonmemory_or_sym_operand): Likewise.
	* config/bfin/bfin.h (MASK_REG_ARGS, MASK_OPT_PROLOGUE,
	MASK_MINI_CONST_POOL, MASK_UNIT_CONST_POOL, MASK_NEW_PROLOGUE,
	TARGET_MINI_CONST_POOL, TARGET_UNIT_CONST_POOL, TARGET_CONST_POOL,
	TARGET_NEW_PROLOGUE, TARGET_REGPARM, TARGET_DEBUG_ARG,
	TARGET_OPT_PROLOGUE): Delete macros.
	(TARGET_SWITCHES): Delete corresponding arguments.
	(BFIN_POOL_ADDRESS): Delete.
	(GO_IF_LEGITIMATE_ADDRESS): Remove TARGET_MINI_CONST_POOL code.
	(MAX_REGS_PER_ADDRESS): Only 1 on the bfin.
	(LEGITIMATE_CONSTANT_P): Define as 1.
	(CONSTANT_ADDRESS_P): Just use CONSTANT_P.
	(PREDICATE_CODES): Remove nonmemory_or_sym_operand.
	* config/bfin/bfin.md (consttable_4, consttable_8, consttable_end,
	align_4): Delete patterns.
	
2004-10-14  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (STRUCTURE_SIZE_BOUNDARY): Delete macro.

2004-10-13  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (simple_reg_operand): Delete.  All users replaced
	with register_operand.
	(valid_reg_operand): New function.
	* config/bfin/bfin-protos.h (simple_reg_operand): Delete.
	(valid_reg_operand): Declare.
	* config/bfin/bfin.h (PREDICATE_CODES): Delete simple_reg_operand, add
	valid_reg_operand.
	* config/bfin/bfin.md (shiftadd patterns): Remove conditions that seem
	to workaround reload problems.
	(andsi_insn): Now a named pattern; merge the two zero-extend patterns
	preceding it into this one and use valid_reg_operand.
	(iorsi3, xorsi3): Use valid_reg_operand.

	* config/bfin/bfin-protos.h (bfin_cbranch_operator): Declare.
	* config/bfin/bfin.c (hard_regno_mode_ok): CC can't hold SImode.
	(ccbranch_templates): Update to match new version of the pattern.
	(bfin_cbranch_operator): New function.
	(bfin_gen_compare): Omit emitting compare insn if we have BImode
	comparison involving CC.
	* config/bfin/bfin.md (define_attr "length"): Update to match changed
	brcc insn.
	(movsi_insn, movhi_insn, movqi_insn, movsf_insn): Remove alternatives
	involving CC.
	(cmpbi): New expander.
	(beq, bne):  Omit emitting compare insn if we have BImode
	comparison involving CC.
	(cbranchbi4): New pattern, unified from the four cbranch patterns.
	(seq, slt, sle, sltu, sleu): Describe without using SUBREGs.
	(movsibi, movbisi): Named these patterns; simplify description
	(not CC pattern): Describe as a compare against zero.

2004-10-11  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (negdi2): Clobbers CC.
	* config/bfin/bfin.c (effective_address_32bit_p): Strip off the MEM.
	* configure.ac (test for ld): Move test for $LD to the end of the if
	statement, so we give priority to an in-tree ld.
	* configure: Regenerated.

2004-10-07  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (adddi3): Generate correct code for add of small
	negative constant.
	* config/bfin/bfin.h (PREDICATE_CODES): Add positive_immediate_operand.
	* config/bfin/bfin-protos.h (positive_immediate_operand): Declare.
	* config/bfin/bfin.c (positive_immediate_operand): New function.

	* config/bfin/lib1funcs.asm (__nedf2, __gedf2, __adddf3, __subdf3,
	__muldf3, __divdf3, __cmpdf2, __eqdf2, __ltdf2, __gtdf2, __negdf2,
	__fixdfsi, __fixunsdfsi, __fixdfdi, __floatsidf, __ledf2, __fixsfsi,
	__fixunssfsi, __fixsfdi, __fixunssfdi): Delete.
	* config/bfin/t-bfin-elf (LIB1ASMFUNCS): Remove them from here, too.
	(fp-bit.c): Don't define FLOAT_ONLY or SMALL_MACHINE.

	* config/bfin/bfin.c (split_di): New function, from i386.c.
	(hard_regno_mode_ok): Limit regs usable for DImode to MOST_REGS.
	(secondary_input_reload_class): DImode to memory works just like
	SImode.
	* config/bfin/bfin.h (GO_IF_LEGITIMATE_ADDRESS): Don't allow
	autoincrements when addressing a DImode value.
	* config/bfin/bfin.md (movdi_insn): New pattern.
	(movdi): New expander.

2004-10-05  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (extendhisi2, zero_extendhisi2, extendqisi2,
	zero_extendqisi2, extendqihi2, zero_extendqihi2): Properly mark the
	memory alternatives as type "mcld".
	(subreg hisi extendpattern): Delete.

	* config/bfin/bfin.md (iordi3, anddi3, xordi3): Turn into 2-operand
	insns.
	(iordi_sesidi_di, anddi_sesidi_di, xordi_sesidi_di): Likewise, also
	add scratch register to avoid clobbering one of the inputs too early.

2004-10-04  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (hard_regno_mode_ok): Allow all registers to hold
	QImode and HImode values.
	* config/bfin/bfin.md (recently added addsi pattern): Delete.

	* config/bfin/bfin.c (log2constp): Also check that input is nonzero.
	(secondary_input_reload_class): Don't use true_regnum, go through
	reg_renumber.

	* config/bfin/bfin.c (confitional_register_usage): Generate bfin_cc_rtx
	with BImode.
	(hard_regno_mode_ok): Allow BImode for CCREGS.
	(bfin_gen_compare): Use BImode instead of CCmode.
	* config/bfin/bfin.md (movsicc_insn1, movsicc_insn2, bit test patterns,
	not CC pattern, comparison patterns, beq, bne, bgt, bgtu, blt, bltu,
	bge, bgeu, ble, bleu, conditional branch patterns, seq, slt, sle, sltu,
	sleu, cc to/from dreg move patterns): Likewise.

2004-10-03  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (TRAMPOLINE_TEMPLATE): Correct instruction
	encodings.
	* config/bfin/bfin.md (negdi2): Compute it properly - no such thing as
	a logical neg.
	(adddi3, subdi3, subdi_di_zesidi, subdi_zesidi_di, subdi_di_sesidi,
	subdi_sesidi_di): The carry flag is called "ac0", not "ac".

	* config/bfin/t-bfin-elf (LIB2FUNCS): Remove _floatdidf, _floatdisf,
	_fixunsdfsi, _fixunssfsi, _fixdfdi, _fixunssfdi, _fixsfdi, _fixxfdi,
	_fixunsxfdi, _floatdixf, _fixunsxfsi, _fixtfdi, _fixunstfdi,
	_floatditf.
	(TARGET_LIBGCC2_FLAGS): Don't define DF=SF.
	(LIB2FUNCS_EXTRA): Don't define.
	(DPBIT): Define.
	(dp-bit.c): New rule.

	* config/bfin/bfin.md (define_attr "length"): Adjust for the odd way
	genattrtab treats the PC rtx.

	* config/bfin/bfin.c (new_save_instr): Delete.
	(frame_pointer_required): Don't call it.  Clean up.
	(bfin_function_prologue): Remove non-TARGET_NEW_PROLOGUE code.
	Make sure FP is set up whenever it is needed.
	(bfin_function_epilogue): Matching changes.

2004-09-29  Bernd Schmidt  <bernds@btinternet.com>

	* config/bfin/bfin.h (PREFERRED_RELOAD_CLASS): Simply return CLASS.
	(PREFERRED_OUTPUT_RELOAD_CLASS): Delete.
	(CLASS_LIKELY_SPILLED_P): Define.
	* config/bfin/bfin.c (secondary_input_reload_class): Deal with moves
	involving CCREGS.
	* config/bfin/bfin.md: Delete another pattern conditional on
	reload_in_progress which appears to be a workaround for some other
	problem.

	* config/bfin/bfin-protos.h (bfin_valid_add): Adjust prototype.
	* config/bfin/bfin.c (bfin_valid_add): Change prototype; simplify and
	also test against too large values.
	(effective_address_32bit_p): Use frame_pointer_rtx instead of
	arg_pointer_rtx.
	(bfin_rtx_costs): SYMBOL_REFS etc. are expensive.
	* config/bfin/bfin.h (enum reg_class, REG_CLASS_NAMES,
	REG_CLASS_CONTENTS): Rearrange classes to give larger classes higher
	numbers.
	(GO_IF_LEGITIMATE_ADDRESS): Don't test for out-of-range constants
	here; that's now done by bfin_valid_add.

	* config/bfin/bfin.h (FIXED_REGISTERS): M3 is no longer fixed.
	(FUNCTION_PROFILER): Fix assembly syntax.
	(addsi pattern): Delete last alternative.
	(subsi pattern): Delete last alternative, replace with two-operand
	subtraction of PREGS.

2004-09-08  Bernd Schmidt  <bernds@btinternet.com>

	* config/bfin/bfin.md (adddi3): Turn this into a two-operand insn to
	avoid running out of registers.
	* config/bfin/bfin.h (FIXED_REGISTERS): BREGS don't need to be fixed.

	* config/bfin/bfin.md (subsi3 insn): Restrict to alternatives the
	machine can actually handle.
	(odd subtract pattern): Remove this pattern which looks like a
	workaround for some problem.

2004-09-06  Bernd Schmidt  <bernds@btinternet.com>

	* config/bfin/bfin.c: Include "ggc.h" and "gt-bfin.h"
	(bfin_cc_rtx): Make safe from garbage collection.

	* config/bfin/bfin.md (adddi3): Rewrite pattern to properly mark
	scratch register and destination as earlyclobber.

	* config/bfin/bfin.md (REG_R0 .. REG_CC): Define here...
	* config/bfin/bfin.h: ... instead of here.

	* config/bfin/bfin.md (movsi_insn, movsi, movsf_insn, movsf,
	movhi pattern, movhi, movqi, movqi pattern): Use nonimmediate_operand
	for operand 0.
	(movsi_insn, movhi pattern): Return an empty string.
	(movsi_insn): Remove alternative that requires a scratch register to
	move a register to memory.
	* config/bfin/bfin.c (output_load_immediate): Replace code to handle
	that alternative with an abort.

	* config/bfin/bfin.md (reload_insi, reload_inhi, reload_inqi,
	reload_outsi, reload_outhi, reload_outqi): Delete.
	(movhi_insn, movqi_insn): Named the patterns.
	(movsi_insn, movhi_insn, movqi_insn, movsf_insn): Change constraints
	to exactly describe the machine's capabilities.
	* config/bfin/bfin.h (enum reg_class, REG_CLASS_NAMES,
	REG_CLASS_CONTENTS): Add new class MOST_REGS, union of GENERAL_REGS
	and DAGREGS.
	* config/bfin/bfin.c (SWITCH_SUBREG): Delete macro.
	(secondary_input_reload_class): Rewrite.
	(symbolic_or_const_operand_p): Renamed from symbolic_operand_p; added
	CONST_INT and CONST_DOUBLE.  All callers changed.

	* config/bfin/bfin-protos.h (always_true): Remove.
	(fp_plus_const_operand): Declare.
	* config/bfin/bfin.c (always_true): Remove.
	(fp_plus_const_operand): New function.
	(secondary_input_reload): Handle reloading a PLUS of frame pointer
	and large constant.  Add some braces to eliminate warning.
	* config/bfin/bfin.h (enum reg_class, REG_CLASS_NAMES,
	REG_CLASS_CONTENTS):  Remove extra GENERAL_REGS.
	(GENERAL_REGS): Define as identical to DPREGS.
	(REG_CLASS_FROM_LETTER): Use 'x' for MOST_REGS.
	(PREDICATE_CODES): Add reg_or_7bit_operand.
	* config/bfin/bfin.md (movsi_insn, movhi_insn, movqi_insn,
	movsf_insn): Use new constraint letter 'x'.
	(reload_insi): New pattern.
	(addsi3 expander): Accept only valid constants in predicate.
	(addsi3 insn): Reduce number of alternatives to exactly describe the
	abilities of the machine.  Lose scratch register allocation kludge.
	Set length attribute properly.
	(subsi3): Remove constraints from define_expand pattern.
	(casesi): Make sure we generate valid add insns.

	* config/bfin/bfin.md (attr "type"): Remove unused types "load" and
	"store"; remove "mvp" and "mcldp"; add "mvi".
	(attr "length"): Changes to deal with insn type reorganization.
	Correct length of constant to register moves.
	(attr "sets_preg"): New, replaces mvp/move and mcldp/mcld
	distinction.
	(function unit "dag"): Use it.
	(movsicc_insn1, movsicc_insn2, movsi_insn, movhi_insn, movqi_insn,
	movsf_insn): Combine move/mvp and mcld/mcldp alternatives. Create new
	alternatives for immediate constant loads where appropriate.
	* config/bfin/bfin-protos.h (imm16bit_operand_p): Declare.

2004-09-01  Bernd Schmidt  <bernds@btinternet.com>

	* config/bfin/bfin.c (imm7bit_operand, imm16bit_operand): Test for
	CONST_INT, not CONSTANT_P, before taking INTVAL.
	(simple_reg_operand): Make sure OP is a REG before taking REGNO.
	(hard_regno_mode_ok): Remove workaround for problem in
	secondary_input_reload_class.
	(use_secondary_reload_patterns): Remove unused variable.
	(secondary_input_reload_class): Make sure X is a REG before taking its
	REGNO.
	(output_load_immediate): Likewise for elements of OPERANDS.
	(replace_symbols_in_block): Use SET_DECL_RTL instead of assigning
	DECL_RTL.
	* config/bfin/bfin.h (PREFERRED_RELOAD_CLASS): Make sure X is a REG
	before taking its REGNO.

	* config/bfin/bfin.c (initialize_trampoline): New function.
	* config/bfin/bfin-protos.h (initialize_trampoline): Declare it. 
	config/bfin/bfin.h (INITIALIZE_TRAMPOLINE): Call it.
	(TRAMPOLINE_TEMPLATE): Change so that correct assembly is emitted.

	* config/bfin/bfin.h (ASM_OUTPUT_LABEL): Print a newline character.
	* config/bfin/bfin.c (bfin_function_prologue): Not here.
	(print_operand): Omit trailing whitespace from register names.

	* config/bfin/bfin.md (casesi_internal): Add a scratch register.
	Return an empty string.
	* config/bfin/bfin.c (output_casesi_internal): Use that scratch
	register instead of trying to free one here.
