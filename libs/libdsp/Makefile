subdir:=libdsp

include ../Makerules

LIBBFDSP_ASRCS = \
	a_compress16.asm \
	acos_fr16.asm \
	a_expand16.asm \
	ashfti64.asm \
	asin_fr16.asm \
	atan2_fr16.asm \
	atan_fr16.asm \
	autocoh_fr16.asm \
	autocorr_fr16.asm \
	cabfr16.asm \
	cdiv_fr16.asm \
	cfft2d_fr16.asm \
	cfftf_fr16.asm \
	cfft_fr16.asm \
	cfir_fr16.asm \
	clip_asm.asm \
	clip_fr16.asm \
	cmatmmlt_asm.asm \
	conv2d3x3_asm.asm \
	conv2dasm.asm \
	convolve_asm.asm \
	cos_fr16.asm \
	counti.asm \
	crosscoh_fr16.asm \
	crosscorr_fr16.asm \
	csadd.asm \
	cssub.asm \
	cvecdot_fr16.asm \
	cvecsmult_fr16.asm \
	cvecvmult_fr16.asm \
	cvvadd.asm \
	cvvsub.asm \
	div16.asm \
	divfract32.asm \
	fir_decima16.asm \
	fir_fr16.asm \
	fir_interp16.asm \
	floatdisf.asm \
	floatdiuf.asm \
	fract24_8mul.asm \
	fract28_4mul.asm \
	histogram_fr16.asm \
	ifft2d_fr16.asm \
	ifft_fr16.asm \
	iirdf1_fr16.asm \
	iir_fr16.asm \
	isinf.asm \
	isnan.asm \
	lib_mult64.asm \
	lib_sqrt_seeds.asm \
	lshfti64.asm \
	matmmlt_fr16.asm \
	mean_fr16.asm \
	mu_compress16.asm \
	mu_expand16.asm \
	muli64.asm \
	mult64_32x32.asm \
	multu64_32x32.asm \
	mulu64.asm \
	remi64.asm \
	remu64.asm \
	rfft2d_fr16.asm \
	rfft_fr16.asm \
	rms_fr16.asm \
	roundflti.asm \
	rsqrtd.asm \
	rsqrtf.asm \
	sdiv32.asm \
	sdiv64.asm \
	sign_fr16.asm \
	sin_fr16.asm \
	sqrtd.asm \
	sqrtf.asm \
	sqrt_fr16.asm \
	srem32.asm \
	tan_fr16.asm \
	transpm.asm \
	transpmd.asm \
	transpm_fr16.asm \
	trncr4i8.asm \
	trncr4u8.asm \
	udiv32.asm \
	udiv64.asm \
	urem32.asm \
	var_fr16.asm \
	vecdot.asm \
	vmax.asm \
	vmaxloc.asm \
	vmin.asm \
	vminloc.asm \
	vsadd.asm \
	vsmlt.asm \
	vssub.asm \
	vvadd.asm \
	vvmlt.asm \
	vvsub.asm \
	zerocross.asm \
	zero_crossd.asm \
	zero_crossf.asm

LIBBFDSP_SSRCS = \
	absfl16.S \
	absfl32.S \
	add_fl16.S \
	addfl32.S \
	cmp_fl16.S \
	cmpfl32.S \
	div_fl16.S \
	divfl32.S \
	fitsfl16.S \
	fl162fl.S \
	fl162fr16.S \
	fl2fl16.S \
	fl2fl32.S \
	fl322fl.S \
	fl322fr32.S \
	fr162fl16.S \
	fr322fl32.S \
	mul_fl16.S \
	mulfl32.S \
	negfl16.S \
	negfl32.S \
	normfl16.S \
	normfl32.S \
	sub_fl16.S \
	subfl32.S

LIBBFDSP_CSRCS = \
	abs16.c \
	arg16.c \
	autocoh.c \
	autocohd.c \
	autocorr.c \
	autocorrd.c \
	cadd16.c \
	caddd.c \
	cartesian16.c \
	cartesian.c \
	cartesiand.c \
	cdiv.c \
	cdivd.c \
	clipll.c \
	cmatmmlt.c \
	cmatmmltd.c \
	cmlt16.c \
	cmltd.c \
	coeff_iirdf1_fr16.c \
	conj16.c \
	copysignd.c \
	cot.c \
	cotd.c \
	countll.c \
	crosscoh.c \
	crosscohd.c \
	crosscorr.c \
	crosscorrd.c \
	csub16.c \
	csubd.c \
	cvecdotd.c \
	cvecdotf.c \
	cvecsaddd.c \
	cvecsaddf.c \
	cvecsmlt.c \
	cvecsmltd.c \
	cvecssubd.c \
	cvecssubf.c \
	cvecvaddd.c \
	cvecvaddf.c \
	cvecvmltd.c \
	cvecvmltf.c \
	cvecvsubd.c \
	cvecvsubf.c \
	fclipd.c \
	fclipf.c \
	gen_bart.c \
	gen_black.c \
	gen_gauss.c \
	gen_hamm.c \
	gen_hann.c \
	gen_harris.c \
	gen_kaiser.c \
	gen_rect.c \
	gen_trian.c \
	gen_vonh.c \
	histogram.c \
	histogramd.c \
	Lib_cos16_2PIx.c \
	matmmltd.c \
	matmmltf.c \
	max16.c \
	max.c \
	maxll.c \
	mean.c \
	meand.c \
	means.c \
	min16.c \
	min.c \
	minll.c \
	norm.c \
	normd.c \
	polar16.c \
	polar.c \
	polard.c \
	rms.c \
	rmsd.c \
	signf.c \
	trncr4u4.c \
	twiddle_fr16.c \
	twidfft2d_fr16.c \
	twidfftf_fr16.c \
	twidfftrad2_fr16.c \
	twidfftrad4_fr16.c \
	var.c \
	vard.c \
	vecdotd.c \
	vecdotf.c \
	vecmaxd.c \
	vecmaxf.c \
	vecmaxlocd.c \
	vecmind.c \
	vecminf.c \
	vecminlocd.c \
	vecsaddd.c \
	vecsaddf.c \
	vecsmltd.c \
	vecsmltf.c \
	vecssubd.c \
	vecssubf.c \
	vecvaddd.c \
	vecvaddf.c \
	vecvmltd.c \
	vecvmltf.c \
	vecvsubd.c \
	vecvsubf.c \
	vmaxlocf.c \
	vminlocf.c

LIBBFFASTFP_ASRCS = \
	addfl64.asm \
	cmpfl64.asm \
	divfl64.asm \
	f32tof64.asm \
	f32toi32z.asm \
	f32tou32z.asm \
	f64tof32.asm \
	f64toi32z.asm \
	f64toi64z.asm \
	f64tou32z.asm \
	f64tou64z.asm \
	fltcmp.asm \
	fltsif.asm \
	fltuif.asm \
	fpadd.asm \
	fpdiv.asm \
	fpmult.asm \
	i32tof64.asm \
	i64tof64.asm \
	mulfl64.asm \
	subfl64.asm \
	u32tof64.asm \
	u64tof64.asm

LIBC_CMATH_CSRCS = \
	arg.c \
	argd.c \
	cabs.c \
	cabsd.c \
	cexp.c \
	cexpd.c \
	conjd.c

ifneq ($(LIBC_HAS_NO_CMATH),)
LIBBFDSP_CSRCS += $(LIBC_CMATH_CSRCS)
endif

LIBBFDSP_OBJS = $(LIBBFDSP_ASRCS:%.asm=%.o) $(LIBBFDSP_SSRCS:%.S=%.o) $(LIBBFDSP_CSRCS:%.c=%.o)
LIBBFFASTFP_OBJS = $(LIBBFFASTFP_ASRCS:%.asm=%.o)

LIBS = libbfdsp.a libbffastfp.a

ARFLAGS = cru
CFLAGS = $(MULTILIB_FLAGS) -O2 -D__NO_LIBRARY_ATTRIBUTES__ -I../include -fno-builtin

all: $(LIBS)

libbfdsp.a: $(LIBBFDSP_OBJS)
	$(AR) $(ARFLAGS) libbfdsp.a $(LIBBFDSP_OBJS)

libbffastfp.a: $(LIBBFFASTFP_OBJS)
	$(AR) $(ARFLAGS) libbffastfp.a $(LIBBFFASTFP_OBJS)

%.o: %.asm
	$(CC) $(CFLAGS) -x assembler-with-cpp -c $< -o $*.o

%.o: %.S
	$(CC) $(CFLAGS) -c $< -o $*.o

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $*.o

install: $(addprefix $(inst_libdir)/, $(LIBS))

$(addprefix $(inst_libdir)/,$(LIBS)): $(inst_libdir)/%: %
	$(do-install)

clean:
	rm -rf *.o *.a
