// gcc version 3.3.3 bfin version 1.0.0 opt -O1
.file "mkstemps.i";
.text;
.align 2
L_letters_$0:.dw	0x6261;
.dw	0x6463;
.dw	0x6665;
.dw	0x6867;
.dw	0x6a69;
.dw	0x6c6b;
.dw	0x6e6d;
.dw	0x706f;
.dw	0x7271;
.dw	0x7473;
.dw	0x7675;
.dw	0x7877;
.dw	0x7a79;
.dw	0x4241;
.dw	0x4443;
.dw	0x4645;
.dw	0x4847;
.dw	0x4a49;
.dw	0x4c4b;
.dw	0x4e4d;
.dw	0x504f;
.dw	0x5251;
.dw	0x5453;
.dw	0x5655;
.dw	0x5857;
.dw	0x5a59;
.dw	0x3130;
.dw	0x3332;
.dw	0x3534;
.dw	0x3736;
.dw	0x3938;
.db	0x00;
.data;
.align 2
L_value_$1:.space 8;
.text;
.align 2
L$LC$0:
.dw	0x5858;
.dw	0x5858;
.dw	0x5858;
.db	0x00;
.align 2
.global _mkstemps;
.type _mkstemps, STT_FUNC;
_mkstemps:
	LINK 20;
	[--sp] = ( r7:4, p5:3 );
	P4  =R0 ;
	R6  =R1 ;
	call _strlen;
	R5  =R0 ;
	R0  = 6 (X);
	R0 =R0 +R6 ; //immed->Dreg 
	cc =R5 <R0 ;
	if !cc jump 6; jump.l L$L$13;
	R0  =R5 -R6 ;
	R2  =P4 ;
	R0 =R2 +R0 ;
	R0 +=-6;
	R2  = 6 (X);
	R1.L  = L$LC$0; R1.H  = L$LC$0;
	call _strncmp;
	cc =R0 ==0;
	if cc jump 6; jump.l L$L$13;
	R6  =R5 -R6 ;
	R3  =P4 ;
	R6 =R3 +R6 ;
	R6 +=-6;
	R0  =FP ;
	R0 +=-8;
	R1  = 0 (X);
	call _gettimeofday;
	P5.L  = L_value_$1; P5.H  = L_value_$1;
	R0  =[FP +-4];
	R1  = R0  (X);
	R1  >>>= 31;
	R5  = ALIGN16(R1 , R0 );
	R4  =R0 ;
	R4  <<=16;
	R0  =[FP +-8];
	R4  = R4  ^ R0 ;
	R5  = R0 ;
	R5 >>>=31;
	R5  = R5  ^ R5 ;
	call _getpid;
	R4  = R4  ^ R0 ;
	R5  = R0 ;
	R5 >>>=31;
	R5  = R5  ^ R5 ;
	R0  =[P5 ];
	R1  =[P5 +4];
	R4 =R4 +R0 ; cc=ac; R5 =R5 +R1 ; R2 =cc; R5 =R5 +R2 ;
	[P5 ] =R4 ;
	[P5 +4] =R5 ;
	R0  = 0 (X);
	[FP +-20] =R0 ;
	R3.L  = -23817; R3.H  = 3;
	cc =R0 <=R3 ;
	if cc jump 6; jump.l L$L$11;
	R4  =P5 ;
L$L$9:
	P2  =R4 ;
	P3  =[P2 ];
	R5  =[P2 +4];
	R2  = 0 (X);
	R0  =P3 ;
	R1  =R5 ;
	call ___umoddi3;
	P0  =R0 ;
	P2.L  = L_letters_$0; P2.H  = L_letters_$0;
	P2 =P0 +P2 ;
	R2  = B [P2 ] (X);
	P5  =R6 ;
	B [P5 ] =R2 ;
	R2  = 0 (X);
	R0  =P3 ;
	R1  =R5 ;
	call ___udivdi3;
	P3  =R0 ;
	R5  =R1 ;
	R2  = 0 (X);
	call ___umoddi3;
	P0  =R0 ;
	P2.L  = L_letters_$0; P2.H  = L_letters_$0;
	P2 =P0 +P2 ;
	R2  = B [P2 ] (X);
	B [P5 +1] =R2 ;
	R2  = 0 (X);
	R0  =P3 ;
	R1  =R5 ;
	call ___udivdi3;
	P3  =R0 ;
	R5  =R1 ;
	R2  = 0 (X);
	call ___umoddi3;
	P0  =R0 ;
	P2.L  = L_letters_$0; P2.H  = L_letters_$0;
	P2 =P0 +P2 ;
	R3  = B [P2 ] (X);
	B [P5 +2] =R3 ;
	R2  = 0 (X);
	R0  =P3 ;
	R1  =R5 ;
	call ___udivdi3;
	P3  =R0 ;
	R5  =R1 ;
	R2  = 0 (X);
	call ___umoddi3;
	P0  =R0 ;
	P2.L  = L_letters_$0; P2.H  = L_letters_$0;
	P2 =P0 +P2 ;
	R2  = B [P2 ] (X);
	B [P5 +3] =R2 ;
	R2  = 0 (X);
	R0  =P3 ;
	R1  =R5 ;
	call ___udivdi3;
	P3  =R0 ;
	R5  =R1 ;
	R2  = 0 (X);
	call ___umoddi3;
	P0  =R0 ;
	P2.L  = L_letters_$0; P2.H  = L_letters_$0;
	P2 =P0 +P2 ;
	R3  = B [P2 ] (X);
	B [P5 +4] =R3 ;
	R2  = 0 (X);
	R0  =P3 ;
	R1  =R5 ;
	call ___udivdi3;
	[FP +-12] =R1 ;
	R2  = 0 (X);
	call ___umoddi3;
	P0  =R0 ;
	P2.L  = L_letters_$0; P2.H  = L_letters_$0;
	P2 =P0 +P2 ;
	R2  = B [P2 ] (X);
	B [P5 +5] =R2 ;
	[SP +12] =P4 ;
	R3  = 194 (X);
	[SP +16] =R3 ;
	P2  = 384 (X);
	[SP +20] =P2 ;
	call _open;
	cc =R0 <0;
	if cc jump 6; jump.l L$L$1;
	P5  =R4 ;
	R0  =[P5 ];
	R1  =[P5 +4];
	R2  = 7777 (X);
	R3  = 0 (X);
	R0 =R0 +R2 ; cc=ac; R1 =R1 +R3 ; R3 =cc; R1 =R1 +R3 ;
	[P5 ] =R0 ;
	[P5 +4] =R1 ;
	R0  =[FP +-20];
	R0 +=1;
	[FP +-20] =R0 ;
	R2.L  = -23817; R2.H  = 3;
	cc =R0 <=R2 ;
	if !cc jump 6; jump.l L$L$9;
L$L$11:
	R3  = 0 (X);
	B [P4 ] =R3 ;
L$L$13:
	R0  = -1 (X);
L$L$1:
	( r7:4, p5:3 ) = [sp++];
	UNLINK;
	rts;


