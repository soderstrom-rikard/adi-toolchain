# Process this file with autoconf to produce a configure script.

# init autoconf (and check for presence of ChangeLog)
AC_INIT([gdbproxy], [0.7.2], [http://gdbproxy.sourceforge.net/])

AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE
dnl silent rules requires automake-1.11+
m4_ifdef([AM_SILENT_RULES],
	[AM_SILENT_RULES([yes])],
	[AC_SUBST([AM_DEFAULT_VERBOSITY], [1])])

AM_CONFIG_HEADER(config.h)

# The targets we know about at this time

AC_DEFINE(HAVE_TARGET_BLACKFIN_C, 1,
     [Define if the Blackfin JTAG target exists.])

# Check for programs
AC_PROG_MAKE_SET
AC_PROG_CC
gl_EARLY
gl_INIT

# Checks for libraries.

# Checks for header files.
AC_HEADER_STDC
AC_HEADER_DIRENT

AC_CHECK_HEADERS(fcntl.h)
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADERS(syslog.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(getopt.h)

dnl dont actually care for Blackfin, and this breaks cross-compiling, so punt!
dnl AC_CHECK_FILES(target_*.c)

dnl add warning options if GCC
if test "x$GCC" = "xyes"; then
#  CFLAGS="$CFLAGS -Wall -Wshadow -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wwrite-strings -Waggregate-return -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Winline"
  CFLAGS="$CFLAGS -Wall -Wshadow -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Waggregate-return -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Winline -Wno-unused-function"
else
  echo "gcc not found, it is required to build this program"
  exit 1
fi

AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S
PKG_PROG_PKG_CONFIG

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_BIGENDIAN
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_TYPE_UID_T

# Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gettimeofday select socket getopt_long_only)

USE_RC_SOURCES="false"
case $host_os in
       *mingw32*)
           AC_CHECK_TOOL([WINDRES], [windres], :)
           LIBS="$LIBS -lws2_32"
           USE_RC_SOURCES="true"
               ;;
       *cygwin*)
       CFLAGS="$CFLAGS -mno-cygwin"
       LIBS="$LIBS -lws2_32"
               ;;
esac
AM_CONDITIONAL(USE_RC_SOURCES, $USE_RC_SOURCES)


dnl we need urjtag
AC_ARG_WITH([jtag-dir], [AS_HELP_STRING([--with-jtag-dir=<dir>],[path to jtag directory])])
AC_ARG_WITH([jtag-srcdir], [AS_HELP_STRING([--with-jtag-srcdir=<dir>],[path to jtag source directory])])
AC_ARG_WITH([jtag-builddir], [AS_HELP_STRING([--with-jtag-builddir=<dir>],[path to jtag build directory])])
if test "x$with_jtag_dir" = "x" ; then
	test -d ../urjtag && with_jtag_dir="../urjtag"
fi
test "x$with_jtag_srcdir" = "x" && with_jtag_srcdir=$with_jtag_dir
test "x$with_jtag_builddir" = "x" && with_jtag_builddir=$with_jtag_dir
jtag_srcdir=$with_jtag_srcdir
jtag_builddir=$with_jtag_builddir
PKG_CONFIG="${PKG_CONFIG:-pkg-config} --static"
PKG_CHECK_MODULES(URJTAG, urjtag, [:], [
	AC_MSG_RESULT([using urjtag from $jtag_srcdir and $jtag_builddir])
	PKG_CHECK_MODULES(URJTAG, $with_jtag_builddir/src/urjtag.pc)
	URJTAG_CFLAGS="-I$with_jtag_srcdir/include"
	URJTAG_LIBS="-L$with_jtag_builddir/src/.libs $URJTAG_LIBS"
])
AC_SUBST(URJTAG_CFLAGS)
AC_SUBST(URJTAG_LIBS)


AC_CONFIG_FILES(Makefile gnulib/lib/Makefile)

AC_OUTPUT
