2010-09-09  Steve Kilbane  <stephen.kilbane@analog.com>

	[#5827] Add support for flushing instr/data caches when
	creating trampolines. For Linux-based toolchains, rely on
	cacheflush() syscall, if anomalies 05-00-0312 or 05-00-0419
	are in effect. For bare-metal toolchain, use a direct function,
	but map it to L1 if we have to avoid those anomalies.
	* config/bfin/bfin.h (CLEAR_INSN_CACHE): invoke syscall, or map
	directly to __clear_cache_range() function.
	* config/bfin/bfin.c (initialize_trampoline()): remove the assertion,
	and call libgcc2's clear_cache() function.
	* libgcc2.c (clear_cache()): provide local definition of
	__clear_cache_range(), as we want to map this to L1 if anomalies apply.

2010-08-31  Stuart Henderson  <stuart.henderson@analog.com>

	* config/bfin/bfin.c (bfin_cpus[]): [#6211] Move bf592-0.1 so it is default.

2010-08-16  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/bfin.c (bfin_cpus[]): Add 0.2 for bf512/bf514/bf516/bf518.

2010-07-30  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/bfin.c (bfin_cpus[]): Add 0.1 for bf592.

2010-07-08  Steve Kilbane  <stephen.kilbane@analog.com>

	[#5827] Failures in trampoline code due to icache/dcache incoherence
	* config/bfin/bfin.c: abort if we attempt to create a trampoline,
	as we don't have a workaround for this yet. At least we won't create
	code that will fail randomly at run-time. Means an internal compiler
	error will be thrown if you take the address of a nested function defn.

2010-07-02  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/bfin.h (bfin_cpu_t): Drop trailing comma in enum to
	avoid warnings from gcc.

2010-06-16  Steve Kilbane  <stephen.kilbane@analog.com>

	* config/lib1funcs.asm: Use a new implementation for
	 ___divsi3 and ___udivsi3. Adjust ___umodsi3 to match.

2010-06-01  Steve Kilbane  <stephen.kilbane@analog.com>

Fix bug [#6018]:
	* config/bfin/bfin.c: constraint typo in movbi.

2010-02-21  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (reg_used_otherwise): Don't define.
	(REG_USED_OTHERWISE): Define.
	(mark_regs_unavailable): Set reg_used_otherwise from
	argument `data'.
	(optimize_loop_addresses): Don't clobber registers used
	by outer loop.
	(bfin_optimize_loops_1): Free reg_used_otherwise for
	each loop.

2010-02-03  Mike Frysinger  <michael.frysinger@analog.com>

	* doc/invoke.texi (Blackfin Options): -mcpu accepts bf592.
	* config/bfin/t-bfin-elf (MULTILIB_MATCHES): Select bf532-none for
	bf592-none.
	* config/bfin/t-bfin-linux (MULTILIB_MATCHES): Likewise.
	* config/bfin/t-bfin-uclinux (MULTILIB_MATCHES): Likewise.
	* config/bfin/bfin.c (bfin_cpus): Add bf592.
	* config/bfin/bfin.h (bfin_cpu_type): Add BFIN_CPU_BF592.
	(TARGET_CPU_CPP_BUILTINS): Define __ADSPBF592__ and __ADSPBF50x__ for
	BFIN_CPU_BF592.
	* config/bfin/elf.h (LIB_SPEC): Add bf592.

2010-01-29  Jie Zhang  <jie.zhang@analog.com>

	Revert
	2010-01-27  Jie Zhang  <jie.zhang@analog.com>
	* config/bfin/bfin.c (bfin_optimize_loops_1): Process loops
	from innermost.

2010-01-27  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_optimize_loops_1): Process loops
	from innermost.

2010-01-20  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_expand_builtin): Treat
	BFIN_BUILTIN_MULT_1X32X32NS as same as BFIN_BUILTIN_MULT_1X32X32.

2009-12-09  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (bfin_adjust_cost): Give anti and output
	dependencies a cost of 1.

2009-12-09  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_expand_builtin): Fix
	__builtin_bfin_cmplx_msu.

2009-12-01  Bernd Schmidt  <bernd.schmidt@analog.com>

	PR rtl-opt/38582
	* regrename.c (struct du_head): New members id, conflicts,
	hard_conflicts and cannot_rename.
	(enum scan_actions): Remove terminate_all_read and
	terminate_overlapping_read; add mark_all_read.
	(scan_actions_name): Likewise.
	(du_head_p): New typedef.  Define a vector type for it.
	(id_to_chain): New static variable.
	(note_sets, clear_dead_regs): Delete functions.
	(free_chain_data): New function.
	(merge_overlapping_regs): Simply walk the conflicts bitmap.
	Remove argument B, all callers changed.
	(regrename_optimize): Allocate id_to_chain.  Ignore chains that have
	the cannot_rename bit set.  Update regno and nregs of a renamed chain.
	Call free_chain_data when done.
	(do_replace): Remove death notes when the renamed reg is set in the
	last insn; add them if not.
	(mark_conflict, note_sets_clobbers): New static function.
	(fail_current_block, current_id, open_chains_set, live_hard_regs): New
	static variables.
	(scan_rtx_reg): Keep track of conflicts between chains, and between
	chains and hard regs.  Don't terminate chains when we find a read we
	can't handle, mark it unrenameable instead.  For terminate_write,
	terminate chains that are written with an exact match or a superset
	of registers.  Set fail_current_block if multi-word lifetimes are too
	complex to handle.
	(scan_rtx_address): Use mark_all_read instead of terminate_all_read.
	(build_def_use): Initialize current_id, live_chains and live_hard_regs;
	free memory for them when done.
	Rearrange the steps so that earlyclobbers are noted before reads
	are processed.  Add new steps to keep track of hard register lifetimes
	outside insn operands.

	* combine.c (can_combine_p): Disallow cases where a hard reg dies in an
	input that isn't contiguous with the rest of the insns.

2009-11-30  Bernd Schmidt  <bernd.schmidt@analog.com>

	PR rtl-opt/38582
	* regrename.c (struct du_chain): Remove member earlyclobber.
	(scan_rtx_reg): Don't set it.  Remove argument earlyclobber,
	all callers changed.
	(scan_rtx): Remove argument earlyclobber, all callers changed.
	(hide_operands, restore_operands, record_out_operands): New functions,
	broken out of build_def_use.
	(build_def_use): Call them as necessary.

2009-11-28  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/libgcc-bfin.ver (GCC_4.3.0): Add ___ffssi2,
	___extendxftf2, and ___trunctfxf2.

	* config/bfin/linux.h (TARGET_ASM_FILE_END): Define.
	* config/bfin/uclinux.h (TARGET_ASM_FILE_END): Likewise.
	* config/bfin/lib1funcs.asm: Add .section .note.GNU-stack.

	* config/bfin/bfin.c (bfin_adjust_cost): Move dest & src decls up.
	(mark_stored_regs): Declare pat as const_rtc and unused.
	(BB_AUX_INDEX): Cast to unsigned long.
	(bfin_reorder_loops): Change index to unsigned long.
	(forget_known_values, note_np_check_stores): Declare pat unused.
	(bfin_optimize_loops_1): Declare dump_file unused.
	(trapping_loads_p): Delete unused local pat variable.

2009-11-27  Bernd Schmidt  <bernd.schmidt@analog.com>

	PR rtl/38582
	* regrename.c (struct du_head): New structure; some elements moved
	from...
	(struct du_chain): ... this one.
	(open_chains, closed_chains): Now of type struct du_head *.
	(do_replace): Accept du_head argument, not du_chain.  All callers
	changed.  Modified code to match new data structures.
	(build_def_use): Return a list of du_head structures.  Modified code
	to match new data structures.
	(dump_def_use_chain): Accept du_head argument, not du_chain.  All
	callers changed.  Modified code to match new data structures.
	(merge_overlapping_regs): Accept du_head argument, not du_chain.  All
	callers changed.  Modified code to match new data structures.
	(scan_rtx_reg): Change type of this_regno and this_nregs to unsigned.
	Allocate a du_head structure as well as a du_chain when creating a
	new chain.  Modified other code to match new data structures.

2009-11-19  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (circptr): New pattern.
	* config/bfin/constraints.md ("qL"): Add for class LREGS.
	* config/bfin/bfin.md (struct preg_use): New.
	(reg_used_otherwise, puse): New static variables.
	(mark_regs_unavailable, mark_stored_regs, my_loop_preheader_edge,
	optimize_loop_addresses): New functions.
	(bfin_optimize_loops_1): call optimize_loop_addresses.
	(enum bfin_builtins): Add BFIN_CIRCPTR.
	(bfin_init_builtins): Create circptr builtin.
	(bfin_expand_builtin): Handle it.

	* config/bfin/bfin.md (hisi_ext): New attribute for HISI
	mode_iterator.
	(load<mode>_dreg, load<mode>_dreg_postinc,
	load<mode>_dreg_postdec): Use separate alternatives for IREGS
	and PREGS and generate appropriate instructions for them.
	* reload1.c (reload): Clear INSN_CODE for everything after reload.

2009-11-17  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (HISI): New mode_iterator.
	(hisi_string, hisi_part): Corresponding attributes.
	(load<mode>_dreg, load<mode>_dreg_postinc,
	load<mode>_dreg_postdec, loadsi_dreg_postmod): New patterns.
	* config/bfin/constraints.md ("qZ"): Add for class IPREGS.

2009-11-12  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.md (abssi2): Disable when flag_wrapv.
	(abshi2): Likewise.

2009-11-11  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_expand_builtin): Fix a typo for
	lshl_fr1x16.

2009-11-11  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_expand_builtin): Copy op0 to
	register for cmplx_mac and cmplx_msu builtins.

2009-11-09  Mike Frysinger  <michael.frysinger@analog.com>

	* doc/invoke.texi (Blackfin Options): -mcpu accepts bf504 and bf506.
	* config/bfin/t-bfin-elf (MULTILIB_MATCHES): Select bf532-none for
	bf504-none and bf506-none.
	* config/bfin/t-bfin-linux (MULTILIB_MATCHES): Likewise.
	* config/bfin/t-bfin-uclinux (MULTILIB_MATCHES): Likewise.
	* config/bfin/bfin.c (bfin_cpus): Add bf504 and bf506.
	* config/bfin/bfin.h (bfin_cpu_type): Add BFIN_CPU_BF504 and
	BFIN_CPU_BF506.
	(TARGET_CPU_CPP_BUILTINS): Define __ADSPBF504__ and __ADSPBF50x__ for
	BFIN_CPU_BF504.  Define __ADSPBF506__ and __ADSPBF50x__ for
	BFIN_CPU_BF506.
	* config/bfin/elf.h (LIB_SPEC): Add bf504 and bf506.

2009-10-26  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (print_operand): Remove 'N'.
	(enum bfin_builtins): Add BFIN_BUILTIN_LSHIFTRT_1X16,
	BFIN_BUILTIN_LSHIFTRT_2X16, BFIN_BUILTIN_SSASHIFTRT_1X16,
	BFIN_BUILTIN_SSASHIFTRT_2X16 and BFIN_BUILTIN_SSASHIFTRT_1X32.
	(bfin_init_builtins): Add __builtin_bfin_shr_fr1x16,
	__builtin_bfin_shr_fr2x16, __builtin_bfin_shrl_fr1x16,
	__builtin_bfin_shrl_fr2x16 and __builtin_bfin_shr_fr1x32.
	(bdesc_2arg[]): Remove __builtin_bfin_shl_fr2x16,
	__builtin_bfin_shl_fr1x16, __builtin_bfin_lshl_fr2x16,
	__builtin_bfin_lshl_fr1x16 and __builtin_bfin_shl_fr1x32.
	(bfin_expand_binop_builtin_1): New.
	(bfin_expand_binop_builtin): Call bfin_expand_binop_builtin_1.
	(bfin_expand_builtin): Hanle BFIN_BUILTIN_SSASHIFT_1X16,
	BFIN_BUILTIN_SSASHIFT_2X16, BFIN_BUILTIN_SSASHIFT_1X32,
	BFIN_BUILTIN_SSASHIFTRT_1X16, BFIN_BUILTIN_SSASHIFTRT_2X16,
	BFIN_BUILTIN_SSASHIFTRT_1X32, BFIN_BUILTIN_LSHIFTRT_1X16,
	BFIN_BUILTIN_LSHIFTRT_2X16, BFIN_BUILTIN_LSHIFT_1X16
	and BFIN_BUILTIN_LSHIFT_2X16.
	* config/bfin/bfin.md (UNSPEC_ASHIFT): New constant.
	(UNSPEC_LSHIFT): New constant.
	(ssashiftv2hi3): Use UNSPEC_ASHIFT.
	(ssashiftv2hi3_imm): New.
	(ashiftv2hi3_imm): New.
	(ssashiftrtv2hi3): New.
	(ssashifthi3): Use UNSPEC_ASHIFT.
	(ssashifthi3_imm): New.
	(ashifthi3_imm): New.
	(ssashiftrthi3): New.
	(ssashiftsi3): Use UNSPEC_ASHIFT.
	(ssashiftsi3_imm): New.
	(ashiftsi3_imm): New.
	(ssashiftrtsi3): New.
	(lshiftv2hi3): Use UNSPEC_LSHIFT.
	(lshiftrtv2hi3): New.
	(lshifthi3): Use UNSPEC_LSHIFT.
	(lshiftrthi3): New.
	* config/bfin/constraints.md (Ks4): Remove.
	* config/bfin/predicates.md (vec_shift_operand): Remove.
	(const_uimm4_operand): New.
	(const_uimm5_operand): New.
	* doc/md.texi (Machine Constraints Blackfin): Remove Ks4.

2009-10-20  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.md (addsubv2hi3): Fix the order of the high
	part and the low part.
	(subaddv2hi3): Likewise.
	(ssaddsubv2hi3): Likewise.
	(sssubaddv2hi3): Likewise.
	(sublohiv2hi3): Likewise.
	(sssublohiv2hi3): Likewise.
	(sssubhilov2hi3): Likewise.
	(addlohiv2hi3): Likewise.
	(addhilov2hi3): Likewise.
	(ssaddlohiv2hi3): Likewise.
	(ssaddhilov2hi3): Likewise.

2009-10-20  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_init_builtins): Change the type of
	__builtin_bfin_compose_2x16 to v2hi_ftype_short_short.
	Change the types of __builtin_bfin_min_fr1x16,
	__builtin_bfin_max_fr1x16, __builtin_bfin_add_fr1x16,
	__builtin_bfin_sub_fr1x16, __builtin_bfin_mult_fr1x16,
	__builtin_bfin_multr_fr1x16, __builtin_bfin_shl_fr1x16
	and __builtin_bfin_lshl_fr1x16 to short_ftype_short_short.
	Change the types of __builtin_bfin_shl_fr2x16
	and __builtin_bfin_lshl_fr2x16 to v2hi_ftype_v2hi_short.
	Change the type of __builtin_bfin_shl_fr1x32 to
	int_ftype_int_short.

2009-10-20  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (builtin_description): Change
	__builtin_bfin_abs_fr1x16 to use CODE_FOR_ssabshi2.
	* config/bfin/bfin.md (ssabshi2): New pattern.

2009-10-20  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (add_sched_insns_for_speculation): Don't add
	insns for a jump target in a hardware loop.

	* config/bfin/bfin.md (plus_or_minus, pm_op, pm_optab): New code macro
	definitions.
	(<pm_optab>si_insn32): New 32 bit reg-reg add/subtract pattern.
	(corresponding splitter): New.

2009-10-16  Jie Zhang  <jie.zhang@analog.com>

	* simplify-rtx.c (simplify_const_unary_operation): Handle
	SS_ABS.
	* doc/rtl.texi: Document ss_abs.

2009-10-14  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.md (ssashiftsi3): Use SImode for
	operand 1.

2009-10-13  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_init_builtins): Correct types of
	__builtin_bfin_norm_fr1x16 and __builtin_bfin_norm_fr1x32.
	* config/bfin/bfin.md (signbitssi2): SIGNBITS is CLZ minus 1.
	(signbitshi2): Likewise.

2009-09-27  Bernd Schmidt  <bernd.schmidt@analog.com>

	* loop-iv.c (iv_analyze_op): Use function_invariant_p, not CONSTANT_P,
	to test for GRD_INVARIANT.
	(simple_rhs_p): Anything that's function_invariant_p is fine.

2009-09-14  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Fix a copy&paste error
	so that __WORKAROUND_INDIRECT_CALLS is defined only when appropriate.

2009-09-11  Bernd Schmidt  <bernd.schmidt@analog.com>

	Import from mainline:
        * config/bfin/bfin.c (legitimize_pic_address, hard_regno_mode_ok,
        bfin_memory_move_cost, bfin_secondary_reload,
        bfin_output_mi_thunk): Avoid C++ keywords.

2009-08-18  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_expand_call): Don't call gen_load_funcdescsi
	with an address based on a virtual register.

2009-07-02  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (FUNCTION_PROFILER): Save and restore RETS.

2009-06-15  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/bfin.c (bfin_cpus[]): Add 0.1 for bf512, bf514, bf516,
	and bf518.

2009-05-27  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_optimize_loop): When creating a new basic
	block, ensure it has an exit edge.  Emit jumps with emit_jump_insn.

2009-05-26  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/t-bfin-elf (MULTILIB_OPTIONS): Remove
	mleaf-id-shared-library.
	(MULTILIB_DIRNAMES): Remove mleaf-id-shared-library.
	(MULTILIB_EXCEPTIONS): Remove.
	* config/bfin/t-bfin-uclinux (MULTILIB_OPTIONS): Remove
	mleaf-id-shared-library.
	(MULTILIB_DIRNAMES): Remove mleaf-id-shared-library.
	(MULTILIB_EXCEPTIONS): Remove.

2009-05-24  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (reload_out<mode>): Type is mcst.

2009-05-15  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_optimize_loop): If there's no valid last
	insn, insert a nop.

2009-05-14  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config.gcc (bfin target triplets): Add bfin/t-fprules-softfp and
	soft-fp/t-softfp.
	* config/bfin/t-bfin (FPBIT, DPBIT): Remove.
	(fp-bit.c, dp-bit.c): Remove rules.
	* config/bfin/sfp-machine.h: New file.
	* config/bfin/t-fprules-softfp: New file.
	* config/bfin/t-bfin-elf (FPBIT, DPBIT): Remove.
	(fp-bit.c, dp-bit.c): Remove rules.
	* config/bfin/t-bfin-uclinux (FPBIT, DPBIT): Remove.
	(fp-bit.c, dp-bit.c): Remove rules.
	* config/bfin/t-bfin-linux (FPBIT, DPBIT): Remove.
	(fp-bit.c, dp-bit.c): Remove rules.

2009-04-29  Jie Zhang  <jie.zhang@analog.com>

	Revert
	2009-04-11  Jie Zhang  <jie.zhang@analog.com>
	* fwprop.c (forward_propagate_into): Don't propagate from
	or into VEC_SELECT.
	* df-scan.c (df_uses_record): Deal with VEC_SELECT.
	* df.h (enum df_ref_flags): Add DF_REF_VEC_SELECT.

2009-04-28  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (sp_or_sm, spm_string, spm_name): New macro.
	(ss<spm_name>hi3, ss<spm_name>hi3_parts, ss<spm_name>hi3_low_parts,
	ss<spm_name_hi3_high_parts): New patterns, replacing ssaddhi3, ssubhi3,
	ssaddhi3_parts and sssubhi3_parts.
	(flag_mulhi3_parts): Produce a HImode output rather than trying to set
	a VEC_SELECT.
	* config/bfin/bfin.c (bfin_expand_builtin, case BFIN_BUILTIN_CPLX_SQU):
	Adjust accordingly.

2009-04-28  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/predicates.md (p_register_operand): New
	predicate.
	(dp_register_operand): New predicate.
	* config/bfin/bfin-protos.h (WA_05000074): Define.
	(ENABLE_WA_05000074): Define.
	* config/bfin/bfin.c (bfin_cpus[]): Add WA_05000074 for
	all cpus.
	(bfin_gen_bundles): Put dsp32shiftimm instruction in slot[0].
	* config/bfin/bfin.md (define_attr type): Add dsp32shiftimm.
	(define_attr addrtype): Allow load/store register to be
	P register.
	(define_attr storereg): New.
	(define_cpu_unit anomaly_05000074): New.
	(define_insn_reservation dsp32shiftimm): New.
	(define_insn_reservation dsp32shiftimm_anomaly_05000074): New.
	(define_insn_reservation loadp): Cannot use slot2.
	(define_insn_reservation loadsp): Cannot use slot2.
	(define_insn_reservation storep): Cannot use slot2. Does not
	apply when working around 05000074.
	(define_insn_reservation storep_anomaly_05000074): New.
	(define_insn_reservation storei): Does not apply when working
	around 05000074.
	(define_insn_reservation storei_anomaly_05000074): New.
	(define_attr length): Add dsp32shiftimm case.
	(define_insn movsi_insn32, movsi_insv, ashlsi3_insn, ashrsi3,
	ror_one, rol_one, lshrsi3, lshrpdi3, ashrpdi3, movhiv2hi_low,
	movhiv2hi_high, composev2hi, packv2hi, movv2hi_hi,
	ssashiftv2hi3, ssashifthi3, ssashiftsi3, lshiftv2hi3, lshifthi3):
	Set type as dsp32shiftimm for dsp32shiftimm alternatives.

2009-04-27  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/constraints.md: New file.
	* config/bfin/bfin.md: Include it.
	(adddi3): Use satisfies_constraint functions instead of the old macros.
	* config/bfin/bfin.h (REG_CLASS_FROM_LETTER, CONSTRAINT_LEN,
	CONST_18UBIT_IMM_P, CONST_16BIT_IMM_P, CONST_16UBIT_IMM_P,
	CONST_7BIT_IMM_P, CONST_7NBIT_IMM_P, CONST_5UBIT_IMM_P,
	CONST_4BIT_IMM_P, CONST_4UBIT_IMM_P, CONST_3BIT_IMM_P,
	CONST_3UBIT_IMM_P, CONST_OK_FOR_K, CONST_OK_FOR_P, CONST_OK_FOR_M,
	CONST_OK_FOR_CONSTRAINT_P, CONST_DOUBLE_OK_FOR_LETTER,
	EXTRA_CONSTRAINT): Delete.
	* config/bfin/predicates.md (highbits_operand, reg_or_7bit_operand,
	reg_or_neg7bit_operand): Use satisfies_constraint functions instead
	of the old macros.
	* config/bfin/bfin.c: Include "tm-constrs.h".
	(bfin_secondary_reload, split_load_immediate, bfin_rtx_costs):
	Use satisfies_constraint functions instead of the old macros.
	* doc/md.texi (Blackfin Constraints): Update file name reference.

2009-04-24  Jie Zhang  <jie.zhang@analog.com>

	* loop-iv.c (determine_max_iter): Ensure niter_max suitable for
	loop mode.
	(iv_number_of_iterations): Likewise.

2009-04-13  Jie Zhang  <jie.zhang@analog.com>

	* doc/invoke.texi (Blackfin Options): Now -mcpu does not accept bf579.
	* config/bfin/t-bfin-elf (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,
	MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Remove bf579.
	* config/bfin/elf.h (LIB_SPEC): Remove bf579.
	* config/bfin/bfin.c (bfin_cpus[]): Remove bf579.
	* config/bfin/bfin.h (enum bfin_cpu_type): Remove BFIN_CPU_BF579.
	(TARGET_CPU_CPP_BUILTINS): Remove bf579.
	* config/bfin/bfin.md (add_with_carry): Remove conditional.
	(add_with_carry_ac): Remove.
	(sub_with_carry): Remove bf579.
	
2009-04-11  Jie Zhang  <jie.zhang@analog.com>

	* fwprop.c (forward_propagate_into): Don't propagate from
	or into VEC_SELECT.
	* df-scan.c (df_uses_record): Deal with VEC_SELECT.
	* df.h (enum df_ref_flags): Add DF_REF_VEC_SELECT.

2009-04-10  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_expand_builtin): Initialize another
	icode before use.

2009-04-09  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_expand_builtin): Initialize icode
	before use.
	* config/bfin/bfin.md (AREG): Define mode iterator.
	(reload_in, reload_out): Use mode iterator AREG.

2009-03-31  Bernd Schmidt  <bernd.schmidt@analog.com>

	* final.c (insn_current_align): Delete.
	(insn_current_reference_address): Just return insn_current_address.
	(shorten_branches): Always assume worst case for label alignments.

2009-03-27  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_expand_builtin,
	case BFIN_BUILTIN_MULT_1X32X32): Force constants to registers for the
	operands.

2009-03-25  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_optimize_loop): If the LSETUP goes before
	a jump insn, count that jump in the distance to the loop start.

2009-03-16  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (workaround_speculation): Sync insns also need
	three nops.

2009-03-15  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/libgcc-bfin.ver (GCC_4.1.0): Add ___smulsi3_highpart
	and ___umulsi3_highpart.

2009-03-14  Bernd Schmidt  <bernd.schmidt@analog.com>

	* loop-iv.c (simple_rhs_p): Allow regs that are function_invariant_p.

2009-03-12  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/uclinux.h (STARTFILE_SPEC): Add proper
	start file for shared flat.
	(LIB_SPEC): Define.
	(LINK_SPEC): Define.
	* doc/invoke.texi (Blackfin Options): Document -elf2flt,
	-no-elf2flt, and -static-libc for Blackfin .

2009-03-11  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_optimize_loop): Don't move arbitary
	register to LCREG. Only DREG and PREG are allowed.
	* config/bfin/bfin.md (movsi_insn): Refine constraints.

2009-03-02  Bernd Schmidt  <bernd.schmidt@analog.com>

	* tree-ssa-loop-ivopts.c (struct cost_pair): New member CAN_AUTOINC.
	(set_use_iv_cost): Initialize it from new arg CAN_AUTOINC.  All
	callers changed.
	(get_address_cost): New arg MAY_AUTOINC.  All callers changed.  Test
	whether autoincrement addressing is possible.
	(autoinc_possible_p): New static function.
	(get_computation_cost_at): New arg CAN_AUTOINC.  All callers changed.
	Use autoinc_possible_p and get_address_cost to work out if autoinc
	is likely.
	(get_computation_cost): New arg CAN_AUTOINC.  All callers changed.
	(determine_use_iv_costs): Add autoinc to the costs dump.
	(iv_ca_recount_cost): Use the CAN_AUTOINC field of struct cost_pair.

2009-02-27  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (do_link): Generate LINK instruction
	if both FP and RETS are to be saved.

2009-02-27  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (struct machine_function): Remove has_rets_clobber.
	(ret_regs[]): New.
	(must_save_rets_p): Return true if RETS is live.
	(expand_interrupt_handler_prologue): Use ret_regs[].
	(expand_interrupt_handler_epilogue): Use ret_regs[] and
	pass return register to gen_return_internal.
	(bfin_has_rets_clobber): Remove.
	(bfin_expand_prologue): Don't call bfin_has_rets_clobber.
	(bfin_expand_epilogue): Pass return register to
	gen_return_internal.
	(bfin_expand_call): Explicitly clobber RETS.
	* config/bfin/bfin.h (FUNCTION_RETURN_REGISTERS): Define.
	* config/bfin/sync.md (all patterns): Explicitly clobber
	RETS.

2009-02-26  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_optimize_loop): If we need a scratch reg,
	scan backwards to try to find a constant to initialize it.

2009-02-25  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (struct machine_function): Add has_rets_clobber.
	(must_save_fp_p): Don't return true because of frame_pointer_needed.
	(must_save_rets_p): New.
	(n_regs_saved_by_prologue): Use must_save_rets_p instead of
	current_function_is_leaf.
	(do_link): Likewise.
	(do_unlink): Likewise.
	(bfin_has_rets_clobber): New.
	(bfin_expand_prologue): Set cfun->machine->has_rets_clobber.

2009-02-25  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_expand_prologue): Ask do_link to
	save FP and RETS with saveall attribute.
	(bfin_expand_epilogue): Ask do_unlink to restore FP and RETS
	with saveall attribute.

2009-02-24  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (splitting_loops): Declare.
	* config/bfin/bfin-protos.h (WA_05000257, WA_05000283, WA_05000315):
	Reorder bit definitions to be ascending.
	(WA_LOAD_LCREGS, ENABLE_WA_LOAD_LCREGS): New macros.
	* config/bfin/bfin.c (splitting_loops): New variable.
	(bfin_cpus): Add WA_LOAD_LCREGS as needed.
	(struct loop_info): Remove members INIT and LOOP_INIT.
	(bfin_optimize_loop): Don't set them.  Reorder the code that generates
	the LSETUP sequence.  Allow LC to be loaded from any register, but also
	add a case to push/pop a PREG scratch if ENABLE_WA_LOAD_LCREGS.
	(bfin_reorg): Add another splitting pass after loop optimizations with
	splitting_loops set to 1.
	* config/bfin/bfin.md (loop_end splitter): Use splitting_loops instead
	of reload_completed.

	* loop-iv.c (replace_single_def_regs): Follow chains of
	single-definition regs.  Use reg notes where possible.  Allow not just
	constants, but anything that's function_invariant_p.

2009-02-23  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_optimize_loop): Unify handling of
	problematic last insns.  Test for TYPE_CALL to catch the new sync
	insns.  Remove special case testing for last insn of inner loops.

2009-02-17  Bernd Schmidt  <bernd.schmidt@analog.com>

	* simplify-rtx.c (simplify_binary_operation_1) [case AND]: Fix
	previous change to also check for side effects of operands before
	dropping them.

	* config/bfin/bfin.c (bfin_discover_loop): When retrying fails, mark
	the loop as bad.

2009-02-16  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (HAVE_PRE_DECREMENT): Don't define.

	* auto-inc-dec.c (verify_path_1, verify_path, find_loop_inc): New
	functions.
	(find_mem): Call find_loop_inc.
	(rest_of_handle_auto_inc_dec): Calculate dominance info and DU/UD
	chains.

	* simplify_rtx.c (simplify_binary_operation_1) [case AND]: If there's
	no overlap between nonzero bits of the operands, the result is zero.

2009-02-13  Bernd Schmidt  <bernd.schmidt@analog.com>

	* tree-ssa-loop-ivopts.c (difference_cost): Give FOLDED the right type.

2009-02-13  Jie Zhang  <jie.zhang@analog.com>

	* emutls.c (emutls_destroy): Don't fall out of the array bound.

2009-02-12  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (addsi3): Add an alternative for IREGS.

	* fold-const.c (ptr_difference_const): Do something meaningful when
	given POINTER_PLUS_EXPR.
	* tree-ssa-loop-ivopts.c (difference_cost): Try to compute the
	difference between E1 and E2, and do the right thing if it turns into
	a constant.

	* config/bfin/bfin.c (find_prev_insn_start): New function.
	(bfin_optimize_loop): Use it in some cases instead of PREV_INSN.
	(find_next_insn_start): Move.

	* tree-ssa-loop-ivopts.c (struct iv_cand): Add member STEP_COST.
	(determine_iv_cost): Initialize it.
	(iv_ca_recount_cost): Try to give a bonus for single uses of a
	candidate in a memory address, where we think this increases the
	chances of autoincrement addressing.

	* loop-iv.c (simplify_using_initial_values): Free a condition if it
	gets simplified to a constant.  Free the COND_LIST before returning.

2009-02-11  Bernd Schmidt  <bernd.schmidt@analog.com>

	* loop-iv.c (implies_p): In the last conditional, verify not only the
	structure but also that the registers match.
	(simplify_using_assignment): Return bool; true iff we used the insn to
	make a replacement.  Remove arg ALTERED.  Don't	deal with altered regs
	here.  All callers changed.
	(simplify_using_initial_values): Deal with altered regs here and track
	more precisely the effect they have on the validity of our expression.

	* loop-iv.c (simplify_using_initial_values): Keep track of conditions
	we have seen and keep using them to simplify new expressions.

	* config/bfin/bfin.c (bfin_optimize_loops_1): Do nothing if the
	function calls setjmp.

	* simplify-rtx.c (simplify_relational_operation_1): Convert unsigned
	comparisons of the form (X + CONST) < CONST to X >= -CONST.

	* loop-iv.c (determine_max_iter): New arg OLD_NITER.  All callers
	changed.  Use this when trying to improve the upper bound.
	Generate the comparison by using simplify_gen_relational.

	* loop-iv.c (simple_rhs_p): Allow more kinds of expressions.

	* loop-iv.c (simplify_using_condition): A condition of the form
	(EQ REG CONST) can be used to simply make a substitution.
	(simplify_using_initial_values): If the expression was simplified by
	a new condition, try all the old ones again too.  Also retry conditions
	after passing them through simplify_using_assignment.

	* loop-iv.c (replace_single_def_regs): New static function.
	(simplify_using_assignment, simplify_using_initial_values): Call it
	when we have a new expression.

	* config/bfin/bfin.c (bfin_register_move_cost): Test for subsets of
	DREGS rather than comparing directly.  Remove code that tries to
	account for latencies.

	* regclass.c (struct reg_pref): New member PREFCLASS2.
	(reg_second_preferred_class): New function.
	(regclass): Compute a second preferred class between the normal one
	and the alternate class with the constraint that it should contain
	more than one reg.
	* global.c (global_alloc): Try the second preferred class.
	(retry_global_alloc): Likewise.
	(find_reg): Arg ALT_REGS_P changed to ALT_REGS_LEVEL, selecting
	between the three possible reg classes.  Callers changed.
	* local-alloc.c (struct qty): New member MIN2_CLASS.
	(alloc_qty): Initialize it.
	(block_alloc): Use it.
	(update_qty_class): Update it.
	* rtl.h (reg_second_preferred_class): Declare.

	* fwprop.c (find_extend_code, optimize_widening_multiply): New
	functions.
	(fwprop): Call optimize_widening_multiply.

2009-02-10  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_extra_live_on_entry): New.
	(TARGET_EXTRA_LIVE_ON_ENTRY): Define.

2009-02-09  Bernd Schmidt  <bernd.schmidt@analog.com>

	* final.c (compute_alignments): When freeing loop information, also
	discard dominance info.

	* simplify-rtx.c (simplify_binary_operation_1): When simplifying AND
	with a constant, recognize that certain operations leave the lower
	bits unchanged or set them to zero.
	(simplify_plus_minus): Eliminate identical operands with opposite signs
	early.

2009-02-08  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_gen_bundles): Don't try to bundle a jump.
	(bfin_optimize_loop): When looking for the last insn before the
	loop_end instruction, don't look past labels.
	(bfin_optimize_loops_1, move_loop_constants): New static functions.
	(bfin_reorg): Call bfin_optimize_loops_1 if optimizing.

2009-02-06  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (sne, sgt, sge, sgtu, sgeu): New patterns.

2009-02-06  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/sync.md: Use indirect call for all sync patterns.

2009-01-31  Bernd Schmidt  <bernd.schmidt@analog.com>

	2009-01-30  Richard Guenther  <rguenther@suse.de>
	PR tree-optimization/39041
	* tree-ssa-forwprop.c (forward_propagate_addr_expr_1):
	Propagate variable indices only if the types match for this stmt.

	* gcc.c-torture/compile/pr39041.c: New testcase.

2009-01-15  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (FUNCTION_PROFILER): Take TARGET_LONG_CALLS into
	account.
	(PROFILE_BEFORE_PROLOGUE): Define.
	(ASM_OUTPUT_REG_PUSH, ASM_OUTPUT_REG_POP): Add tab character.  Correct
	the push insn to use predecrement.

2009-01-10  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_expand_prologue): Don't clobber P2.

2009-01-08  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/bfin-protos.h (bfin_cpu_type): Add BFIN_CPU_BF542M,
	BFIN_CPU_BF544M, BFIN_CPU_BF547M, BFIN_CPU_BF548M, and BFIN_CPU_BF549M.
	* config/bfin/bfin.c (bfin_cpus[]): Add 0.3 for bf542m, bf544m, bf547m,
	bf548m, and bf549m.
	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Define __ADSPBF542M__
	for BFIN_CPU_BF542M, __ADSPBF544M__ for BFIN_CPU_BF544M, __ADSPBF547M__
	for BFIN_CPU_BF547M, __ADSPBF548M__ for BFIN_CPU_BF548M, and
	__ADSPBF549M__ for BFIN_CPU_BF549M.
	* config/bfin/t-bfin-elf (MULTILIB_MATCHES): Select bf532-none for
	bf542m-none, bf544m-none, bf547m-none, bf548m-none, and bf549m-none.
	* config/bfin/t-bfin-linux (MULTILIB_MATCHES): Likewise.
	* config/bfin/t-bfin-uclinux (MULTILIB_MATCHES): Likewise.
	* doc/invoke.texi (Blackfin Options): Document that -mcpu now accepts
	bf542m, bf544m, bf547m, bf548m, and bf549m.

2008-12-16  Bernd Schmidt  <bernd.schmidt@analog.com>

	* fold-const.c (fold_binary): Fold (A & C1) >> C2 to
	(A >> C2) & (C1 >> C2); likewise for other logical operators.

2008-12-11  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (rotrsi, rotlsi): Don't take INTVAL of anything
	that's not CONST_INT.

	* config/bfin/bfin.md (MOVCC): New mode_iterator.
	(mov<mode>cc_insn1, mov<mode>cc_insn2, mov<mode>cc): Renamed from
	movsicc_insn1, movsicc_insn2 and movsicc and macroized.  Remove
	comments from generated assembly.

	* config/bfin/sync.md (sync_compare_and_swapsi, sync_<fetchop_name>si,
	sync_old_<fetchop_name>si, sync_new_<fetchop_name>si): Ensure the
	memory address is a plain register.

	* config/bfin/bfin.c (np_check_regno, np_after_branch): New static
	variables.
	(note_np_check_stores): New function.
	(harmless_null_pointer_p): New function.
	(trapping_loads_p): New args NP_REG and AFTER_NP_BRANCH.  Callers
	changed.  Take into account whether we're in the shadow of a condjump
	that tested NP_REG for NULL.
	Lose all code that tested for SEQUENCEs.
	(workaround_speculation): Avoid inserting NOPs for loads that are
	either always executed or a NULL pointer.

2008-12-06  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/linux.h (TARGET_SUPPORTS_SYNC_CALLS): Define to 1.
	* config/bfin/uclinux.h (TARGET_SUPPORTS_SYNC_CALLS): Define to 1.
	* config/bfin/bfin.h (TARGET_SUPPORTS_SYNC_CALLS): Provide default of
	0.
	* config/bfin/sync.md: New file.
	* config/bfin/bfin.md: Include it.
	(UNSPEC_ATOMIC): New.
	(UNSPEC_ONES): Provide a unique number.

	* config/bfin/t-bfin (LIB1ASMFUNCS): Add muldi3 and umulsi3_highpart.
	* config/bfin/t-bfin-elf (LIB1ASMFUNCS): Add muldi3.
	* config/bfin/t-bfin-linux (LIB1ASMFUNCS): Add muldi3.
	* config/bfin/t-bfin-uclinux (LIB1ASMFUNCS): Add muldi3.
	* config/bfin/lib1funcs.asm (___muldi3): New function.

2008-11-19  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/t-bfin-elf (MULTILIB_OPTIONS): Add mcpu=bf579-none.
	(MULTILIB_DIRNAMES): Add bf579-none.
	(MULTILIB_MATCHES): Deal with bf579.
	(MULTILIB_EXCEPTIONS): Likewise.
	* config/bfin/bfin-protos.h (enum bfin_cpu_type): Move this,
	(bfin_cpu_type): this,
	(bfin_si_revision): this,
	(bfin_workarounds): and this ...
	* config/bfin/bfin.h: ... here.
	* config/bfin/elf.h (STARTFILE_SPEC): Remove mcpu=bf579.
	* config/bfin/bfin.md (add_with_carry): Exclude bf579.
	(add_with_carry_ac): New for bf579.
	(sub_with_carry): Use ac for bf579.

2008-11-11  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (attr "addrtype"): New member "spreg".
	Use it if mem_spfp_address_operand is true for the address.
	(UNSPEC_VOLATILE_STALL): Renamed from UNSPEC_VOLATILE_PLACEHOLDER.
	(attr "type"): Rename "ph3" to "stall".
	(insn_reservation "loadsp"): New.
	(insn_reservation "load_stall1"): New.
	(insn_reservation "load_stall3"): Renamed from "ph3", use four cycles
	of "load" instead of three.
	(stall): Insn renamed from "ph3"; use an operand to determine the
	number of stall cycles.
	* config/bfin/bfin.c (add_sched_insns_for_speculation): Also mirror
	the second pass of workaround_speculation, creating 1-cycle stall
	insns.
	* config/bfin/predicates.md (const1_operand, const3_operand): New.
	(mem_p_address_operand): Exclude stack and frame pointer based
	addresses.
	(mem_spfp_address_operand): New; match them here.

	* config/bfin/bfin.c (bfin_optimize_loop): Don't fail if the loop ends
	with a jump, emit an extra nop instead.

2008-11-10  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_gen_bundles): Remove dummy insns created
	by add_sched_insns_for_speculation.
	(workaround_speculation): Don't delete them here.

2008-11-05  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (UNSPEC_VOLATILE_PLACEHOLDER): New constant.
	(attr "type"): New entry "ph3".
	(cpu_unit "load"): New.
	(insn_reservations "load32", "loadp", "loadi"): Add reservation of
	"load".
	(insn_reservation "ph3"): New.
	(ph3): New insn.
	* config/bfin/bfin.c (add_sched_insns_for_speculation): New function.
	(bfin_reorg): Call it if scheduling insns.
	(workaround_speculation): Delete the new "ph3" insns.

2008-10-23  Bernd Schmidt  <bernd.schmidt@analog.com>

	An old patch from Jie:
	* config/bfin/bfin.md (composev2hi): Put operands into vector
	with correct order.

2008-10-22  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_cpus): Fix up revisions 0.2 of 538 and 561.

2008-10-20  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin-protos.h (WA_05000257, WA_05000283, WA_05000315,
	ENABLE_WA_05000257, ENABLE_WA_05000283, ENABLE_WA_05000315): New.
	* config/bfin/bfin.c (bfin_cpus): Add these workaround bits as
	appropriate.
	(must_save_p): For some workarounds, interrupts need to clobber a
	P register.
	(expand_prologue_reg_save, expand_epilogue_reg_restore): Save LC0
	and LC1 for WA_05000257.
	(expand_interrupt_handler_prologue): Add dummy read of CHIPID for
	WA_05000283 and WA_05000315.
	* config/bfin/bfin.md (UNSPEC_VOLATILE_DUMMY): New constant.
	(movbi): Add alternative to set CC to 1; improve code for setting
	CC to 0.
	(dummy_load): New pattern.

2008-10-15  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (struct machine_function): New member
	has_loopreg_clobber.
	(bfin_expand_movmem): Set it when generating memcpy insns.
	(n_regs_saved_by_prologue, expand_prologue_reg_save,
	expand_epilogue_reg_restore): If we have hardware loops,
	memcpy insns (indicated by has_loopreg_clobber) or function
	calls, we need to save the loop registers.

2008-10-15  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/elf.h (STARTFILE_SPEC): Add start files for BF579.
	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Don't define
	__ADSPLPBLACKFIN__ for BF579.

2008-10-14  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin-protos.h (enum bfin_cpu_type): Add
	BFIN_CPU_BF579.
	* config/bfin/elf.h (LIB_SPEC): Use proper linker script
	for bf579.
	* config/bfin/bfin.c (bfin_cpus[]): Add bf579.
	* config/bfin/bfin.h (ASM_SPEC): Pass down -mcpu to assembler.
	(TARGET_CPU_CPP_BUILTINS): Define __ADSPBF579__ for bf579.
	* doc/invoke.texi (Blackfin Options): Document that
	-mcpu now accept bf579.

2008-10-06  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.opt (micplb): New option.
	* config/bfin/linux.h (SUBTARGET_DRIVER_SELF_SPECS): Set it.
	* config/bfin/bfin-protos.h (WA_INDIRECT_CALLS,
	ENABLE_WA_INDIRECT_CALLS): New macros.
	* config/bfin/bfin.c (bfin_cpus): Add WA_INDIRECT_CALLS to
	all 54x CPUs.
	(indirect_call_p): New function.
	(workaround_speculation): Handle anomaly 05-00-0426 when
	ENABLE_WA_INDIRECT_CALLS is true.
	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Define
	__WORKAROUND_INDIRECT_CALLS if ENABLE_WA_INDIRECT_CALLS.
	* doc/invoke.texi (Blackfin Options): Document -micplb.

2008-10-01  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/bfin-protos.h (bfin_cpu_type): Add BFIN_CPU_BF512,
	BFIN_CPU_BF514, BFIN_CPU_BF516, and BFIN_CPU_BF518.
	* config/bfin/bfin.c (bfin_cpus[]): Add 0.0 for bf512, bf514, bf516,
	and bf518.
	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Define __ADSPBF512__
	for BFIN_CPU_BF512, __ADSPBF514__ for BFIN_CPU_BF514, __ADSPBF516__
	for BFIN_CPU_BF516, and __ADSPBF518__ for BFIN_CPU_BF518.  Define
	__ADSPBF51x__ for all of them.
	* config/bfin/elf.h (LIB_SPEC): Select proper linker scripts for
	-mcpu bf512, bf514, bf516, and bf518.
	* config/bfin/t-bfin-elf (MULTILIB_MATCHES): Select bf532-none for
	bf512-none, bf514-none, bf516-none, and bf518-none.
	* config/bfin/t-bfin-linux (MULTILIB_MATCHES): Likewise.
	* config/bfin/t-bfin-uclinux (MULTILIB_MATCHES): Likewise.
	* doc/invoke.texi (Blackfin Options): Document that
	-mcpu now accepts bf512, bf514, bf516, and bf518.

2008-09-30  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bdesc_2arg): Add mulhisill, mulhisilh,
	mulhisihl and mulhisihh builtins.

2008-09-16  Bernd Schmidt  <bernd.schmidt@analog.com>

	From Andrew Pinski:
	* tree-ssa-loop-ivopts.c (determine_use_iv_cost_condition): Prefer the
	eliminate IV if the cost are the same.

2008-09-15  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/bfin.c (bfin_cpus[]): Add 0.2 for bf522, bf523, bf524,
	bf526, and bf527.  Add 0.6 for bf533, bf532, and bf531.  Add 0.5 for
	bf538 and bf539.  Add 0.2 for bf542, bf544, bf547, bf548, and bf549.

2008-09-10  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.mc (cbranch_with_nops): Increase length.

2008-09-09  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (workaround_speculation): Fix merge error.
	Change second pass to use find_next_insn_start and find_load helpers
	in order to properly detect parallel insns.

2008-09-08  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (workaround_speculation): Correct algorithm to
	not lose track of the number of NOPs needed.  Number of NOPs needed
	for sync vs. loads workaround was switched; corrected.  Run second
	pass for all workarounds.  No NOPs needed after call insns.
	(bfin_reorg): Remove unnecessary variable.

	From Jie:
	* config/bfin/uclinux.h (LINK_GCC_C_SEQUENCE_SPEC): Make sure
	libbffastfp override libgcc when -mfast-fp.

	From Mike:
	* config/bfin/lib1funcs.asm (___divsi3, ___modsi3, ___udivsi3,
	___umodsi3, ___umulsi3_highpart, ___smulsi3_highpart): Define .size.

2008-09-04  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (gen_one_bundle): Don't create new nops if
	optimizing for size.

2008-09-03  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (n_regs_to_save): New static variable.
	(push_multiple_operation, pop_multiple_operation): Set it.
	(workaround_speculation): New function, broken out of bfin_reorg.
	(workaround_rts_anomaly): New function.
	(bfin_reorg): Call these two functions.

2008-09-02  Bernd Schmidt  <bernd.schmidt@analog.com>

	Restore a cost check that was lost.
	* tree-ssa-loop-ivopts.c (expression_expensive_p): New function.
	* tree-scalar-evolution.c (scev_const_prop): Use it.
	* tree-flow.h (expression_expensive_p): Declare it.

2008-09-02  Jie Zhang  <jie.zhang@analog.com>

	* doc/extend.texi (node Function Attributes): Document l2
	function attribute.
	(node Variable Attributes): Add Blackfin subsection. Document l1
	variable attributes.

2008-09-02  Jie Zhang  <jie.zhang@analog.com>
	
	* config/bfin/bfin.c (bfin_expand_call): Handle L2 functions.
	(bfin_handle_l2_attribute): New.
	(bfin_attribute_table): Add l2 attribute.

2008-08-31  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_longcall_p): Don't use short calls for weak
	symbols.

2008-08-30  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (movpdi): All alternatives have length 4.

	* config/bfin/bfin.c (bfin_expand_prologue): Honour no_stack_limit
	attributes.

	2007-12-07  Michael Frysinger  <michael.frysinger@analog.com>
	* config/bfin/bfin.c (bfin_handle_option): Remove BF561 warning.

	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Define
	__WORKAROUND_RETS when appropriate.

	* config/bfin/uclinux.h (SUBTARGET_FDPIC_NOT_SUPPORTED): New macro.
	* config/bfin/bfin.c (override_options): Test it and sorry out if
	TARGET_FDPIC is also set.

	* config/bfin/bfin.c (override_options): Disable -fstack-limit for
	FD-PIC.

	2008-06-02  Mike Frysinger  <michael.frysinger@analog.com>
	* config/bfin/bfin.c (bfin_cpus[]): Add 0.1 for bf522, bf523, bf524,
	bf525, bf526, bf527, bf542, bf544, bf547, bf548, and bf549.  Add 0.2
	for bf538.

	* config/bfin/bfin.md (loadbytes): New pattern.
	* config/bfin/bfin.c (enum bfin_builtins): Add BFIN_BUILTIN_LOADBYTES.
	(bfin_init_builtins): Initialize it.
	(bdesc_1arg): Add it.

	* config/bfin/bfin.c (bfin_discover_loops): Delete empty loops.

	* config/bfin/bfin.c (bfin_optimize_loop): Properly handle case
	where we have one entry point in the loop which isn't the head.

	From Jie Zhang  <jie.zhang@analog.com>
        * config/bfin/t-bfin-elf (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,
	MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Remove mcpu=bf532-0.3,
	mcpu=bf561-none and mcpu=bf561-0.2.
	* config/bfin/t-bfin-uclinux (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,
	MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Likewise.
	* config/bfin/t-bfin-linux (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,
	MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Likewise.
	* config/bfin/bfin-protos.h (enum bfin_cpu_type): Add
	BFIN_CPU_UNKNOWN.
	* config/bfin/elf.h (STARTFILE_SPEC): Use specific CRT for
	BF561.
	(LIB_SPEC): Use proper linker script for bf561.  Error if no mcpu
	option.
	* config/bfin/bfin.c (bfin_cpu_type): Set to BFIN_CPU_UNKNOWN.
	(cputype_selected): Remove.
	(bfin_handle_option): Don't use cputype_selected.
	(override_options): When no mcpu option, enable all workarounds.
	Don't use bfin_workarounds.
	* config/bfin/bfin.h (DRIVER_SELF_SPECS): Don't set default
	processor type.
	(DEFAULT_CPU_TYPE): Don't define.
