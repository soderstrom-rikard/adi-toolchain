2009-02-24  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (splitting_loops): Declare.
	* config/bfin/bfin-protos.h (WA_05000257, WA_05000283, WA_05000315):
	Reorder bit definitions to be ascending.
	(WA_LOAD_LCREGS, ENABLE_WA_LOAD_LCREGS): New macros.
	* config/bfin/bfin.c (splitting_loops): New variable.
	(bfin_cpus): Add WA_LOAD_LCREGS as needed.
	(struct loop_info): Remove members INIT and LOOP_INIT.
	(bfin_optimize_loop): Don't set them.  Reorder the code that generates
	the LSETUP sequence.  Allow LC to be loaded from any register, but also
	add a case to push/pop a PREG scratch if ENABLE_WA_LOAD_LCREGS.
	(bfin_reorg): Add another splitting pass after loop optimizations with
	splitting_loops set to 1.
	* config/bfin/bfin.md (loop_end splitter): Use splitting_loops instead
	of reload_completed.

2009-02-23  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_optimize_loop): Unify handling of
	problematic last insns.  Test for TYPE_CALL to catch the new sync
	insns.  Remove special case testing for last insn of inner loops.

2009-02-17  Bernd Schmidt  <bernd.schmidt@analog.com>

	* simplify-rtx.c (simplify_binary_operation_1) [case AND]: Fix
	previous change to also check for side effects of operands before
	dropping them.

	* config/bfin/bfin.c (bfin_discover_loop): When retrying fails, mark
	the loop as bad.

2009-02-16  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (HAVE_PRE_DECREMENT): Don't define.

	* auto-inc-dec.c (verify_path_1, verify_path, find_loop_inc): New
	functions.
	(find_mem): Call find_loop_inc.
	(rest_of_handle_auto_inc_dec): Calculate dominance info and DU/UD
	chains.

	* simplify_rtx.c (simplify_binary_operation_1) [case AND]: If there's
	no overlap between nonzero bits of the operands, the result is zero.

2009-02-13  Bernd Schmidt  <bernd.schmidt@analog.com>

	* tree-ssa-loop-ivopts.c (difference_cost): Give FOLDED the right type.

2009-02-13  Jie Zhang  <jie.zhang@analog.com>

	* emutls.c (emutls_destroy): Don't fall out of the array bound.

2009-02-12  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (addsi3): Add an alternative for IREGS.

	* fold-const.c (ptr_difference_const): Do something meaningful when
	given POINTER_PLUS_EXPR.
	* tree-ssa-loop-ivopts.c (difference_cost): Try to compute the
	difference between E1 and E2, and do the right thing if it turns into
	a constant.

	* config/bfin/bfin.c (find_prev_insn_start): New function.
	(bfin_optimize_loop): Use it in some cases instead of PREV_INSN.
	(find_next_insn_start): Move.

	* tree-ssa-loop-ivopts.c (struct iv_cand): Add member STEP_COST.
	(determine_iv_cost): Initialize it.
	(iv_ca_recount_cost): Try to give a bonus for single uses of a
	candidate in a memory address, where we think this increases the
	chances of autoincrement addressing.

	* loop-iv.c (simplify_using_initial_values): Free a condition if it
	gets simplified to a constant.  Free the COND_LIST before returning.

2009-02-11  Bernd Schmidt  <bernd.schmidt@analog.com>

	* loop-iv.c (implies_p): In the last conditional, verify not only the
	structure but also that the registers match.
	(simplify_using_assignment): Return bool; true iff we used the insn to
	make a replacement.  Remove arg ALTERED.  Don't	deal with altered regs
	here.  All callers changed.
	(simplify_using_initial_values): Deal with altered regs here and track
	more precisely the effect they have on the validity of our expression.

	* loop-iv.c (simplify_using_initial_values): Keep track of conditions
	we have seen and keep using them to simplify new expressions.

	* config/bfin/bfin.c (bfin_optimize_loops_1): Do nothing if the
	function calls setjmp.

	* simplify-rtx.c (simplify_relational_operation_1): Convert unsigned
	comparisons of the form (X + CONST) < CONST to X >= -CONST.

	* loop-iv.c (determine_max_iter): New arg OLD_NITER.  All callers
	changed.  Use this when trying to improve the upper bound.
	Generate the comparison by using simplify_gen_relational.

	* loop-iv.c (simple_rhs_p): Allow more kinds of expressions.

	* loop-iv.c (simplify_using_condition): A condition of the form
	(EQ REG CONST) can be used to simply make a substitution.
	(simplify_using_initial_values): If the expression was simplified by
	a new condition, try all the old ones again too.  Also retry conditions
	after passing them through simplify_using_assignment.

	* loop-iv.c (replace_single_def_regs): New static function.
	(simplify_using_assignment, simplify_using_initial_values): Call it
	when we have a new expression.

	* config/bfin/bfin.c (bfin_register_move_cost): Test for subsets of
	DREGS rather than comparing directly.  Remove code that tries to
	account for latencies.

	* regclass.c (struct reg_pref): New member PREFCLASS2.
	(reg_second_preferred_class): New function.
	(regclass): Compute a second preferred class between the normal one
	and the alternate class with the constraint that it should contain
	more than one reg.
	* global.c (global_alloc): Try the second preferred class.
	(retry_global_alloc): Likewise.
	(find_reg): Arg ALT_REGS_P changed to ALT_REGS_LEVEL, selecting
	between the three possible reg classes.  Callers changed.
	* local-alloc.c (struct qty): New member MIN2_CLASS.
	(alloc_qty): Initialize it.
	(block_alloc): Use it.
	(update_qty_class): Update it.
	* rtl.h (reg_second_preferred_class): Declare.

	* fwprop.c (find_extend_code, optimize_widening_multiply): New
	functions.
	(fwprop): Call optimize_widening_multiply.

2009-02-10  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_extra_live_on_entry): New.
	(TARGET_EXTRA_LIVE_ON_ENTRY): Define.

2009-02-09  Bernd Schmidt  <bernd.schmidt@analog.com>

	* final.c (compute_alignments): When freeing loop information, also
	discard dominance info.

	* simplify-rtx.c (simplify_binary_operation_1): When simplifying AND
	with a constant, recognize that certain operations leave the lower
	bits unchanged or set them to zero.
	(simplify_plus_minus): Eliminate identical operands with opposite signs
	early.

2009-02-08  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_gen_bundles): Don't try to bundle a jump.
	(bfin_optimize_loop): When looking for the last insn before the
	loop_end instruction, don't look past labels.
	(bfin_optimize_loops_1, move_loop_constants): New static functions.
	(bfin_reorg): Call bfin_optimize_loops_1 if optimizing.

2009-02-06  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (sne, sgt, sge, sgtu, sgeu): New patterns.

2009-02-06  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/sync.md: Use indirect call for all sync patterns.

2009-01-31  Bernd Schmidt  <bernd.schmidt@analog.com>

	2009-01-30  Richard Guenther  <rguenther@suse.de>
	PR tree-optimization/39041
	* tree-ssa-forwprop.c (forward_propagate_addr_expr_1):
	Propagate variable indices only if the types match for this stmt.

	* gcc.c-torture/compile/pr39041.c: New testcase.

2009-01-15  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.h (FUNCTION_PROFILER): Take TARGET_LONG_CALLS into
	account.
	(PROFILE_BEFORE_PROLOGUE): Define.
	(ASM_OUTPUT_REG_PUSH, ASM_OUTPUT_REG_POP): Add tab character.  Correct
	the push insn to use predecrement.

2009-01-10  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin.c (bfin_expand_prologue): Don't clobber P2.

2009-01-08  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/bfin-protos.h (bfin_cpu_type): Add BFIN_CPU_BF542M,
	BFIN_CPU_BF544M, BFIN_CPU_BF547M, BFIN_CPU_BF548M, and BFIN_CPU_BF549M.
	* config/bfin/bfin.c (bfin_cpus[]): Add 0.3 for bf542m, bf544m, bf547m,
	bf548m, and bf549m.
	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Define __ADSPBF542M__
	for BFIN_CPU_BF542M, __ADSPBF544M__ for BFIN_CPU_BF544M, __ADSPBF547M__
	for BFIN_CPU_BF547M, __ADSPBF548M__ for BFIN_CPU_BF548M, and
	__ADSPBF549M__ for BFIN_CPU_BF549M.
	* config/bfin/t-bfin-elf (MULTILIB_MATCHES): Select bf532-none for
	bf542m-none, bf544m-none, bf547m-none, bf548m-none, and bf549m-none.
	* config/bfin/t-bfin-linux (MULTILIB_MATCHES): Likewise.
	* config/bfin/t-bfin-uclinux (MULTILIB_MATCHES): Likewise.
	* doc/invoke.texi (Blackfin Options): Document that -mcpu now accepts
	bf542m, bf544m, bf547m, bf548m, and bf549m.

2008-12-16  Bernd Schmidt  <bernd.schmidt@analog.com>

	* fold-const.c (fold_binary): Fold (A & C1) >> C2 to
	(A >> C2) & (C1 >> C2); likewise for other logical operators.

2008-12-11  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (rotrsi, rotlsi): Don't take INTVAL of anything
	that's not CONST_INT.

	* config/bfin/bfin.md (MOVCC): New mode_iterator.
	(mov<mode>cc_insn1, mov<mode>cc_insn2, mov<mode>cc): Renamed from
	movsicc_insn1, movsicc_insn2 and movsicc and macroized.  Remove
	comments from generated assembly.

	* config/bfin/sync.md (sync_compare_and_swapsi, sync_<fetchop_name>si,
	sync_old_<fetchop_name>si, sync_new_<fetchop_name>si): Ensure the
	memory address is a plain register.

	* config/bfin/bfin.c (np_check_regno, np_after_branch): New static
	variables.
	(note_np_check_stores): New function.
	(harmless_null_pointer_p): New function.
	(trapping_loads_p): New args NP_REG and AFTER_NP_BRANCH.  Callers
	changed.  Take into account whether we're in the shadow of a condjump
	that tested NP_REG for NULL.
	Lose all code that tested for SEQUENCEs.
	(workaround_speculation): Avoid inserting NOPs for loads that are
	either always executed or a NULL pointer.

2008-12-06  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/linux.h (TARGET_SUPPORTS_SYNC_CALLS): Define to 1.
	* config/bfin/uclinux.h (TARGET_SUPPORTS_SYNC_CALLS): Define to 1.
	* config/bfin/bfin.h (TARGET_SUPPORTS_SYNC_CALLS): Provide default of
	0.
	* config/bfin/sync.md: New file.
	* config/bfin/bfin.md: Include it.
	(UNSPEC_ATOMIC): New.
	(UNSPEC_ONES): Provide a unique number.

	* config/bfin/t-bfin (LIB1ASMFUNCS): Add muldi3 and umulsi3_highpart.
	* config/bfin/t-bfin-elf (LIB1ASMFUNCS): Add muldi3.
	* config/bfin/t-bfin-linux (LIB1ASMFUNCS): Add muldi3.
	* config/bfin/t-bfin-uclinux (LIB1ASMFUNCS): Add muldi3.
	* config/bfin/lib1funcs.asm (___muldi3): New function.

2008-11-19  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/t-bfin-elf (MULTILIB_OPTIONS): Add mcpu=bf579-none.
	(MULTILIB_DIRNAMES): Add bf579-none.
	(MULTILIB_MATCHES): Deal with bf579.
	(MULTILIB_EXCEPTIONS): Likewise.
	* config/bfin/bfin-protos.h (enum bfin_cpu_type): Move this,
	(bfin_cpu_type): this,
	(bfin_si_revision): this,
	(bfin_workarounds): and this ...
	* config/bfin/bfin.h: ... here.
	* config/bfin/elf.h (STARTFILE_SPEC): Remove mcpu=bf579.
	* config/bfin/bfin.md (add_with_carry): Exclude bf579.
	(add_with_carry_ac): New for bf579.
	(sub_with_carry): Use ac for bf579.

2008-11-11  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (attr "addrtype"): New member "spreg".
	Use it if mem_spfp_address_operand is true for the address.
	(UNSPEC_VOLATILE_STALL): Renamed from UNSPEC_VOLATILE_PLACEHOLDER.
	(attr "type"): Rename "ph3" to "stall".
	(insn_reservation "loadsp"): New.
	(insn_reservation "load_stall1"): New.
	(insn_reservation "load_stall3"): Renamed from "ph3", use four cycles
	of "load" instead of three.
	(stall): Insn renamed from "ph3"; use an operand to determine the
	number of stall cycles.
	* config/bfin/bfin.c (add_sched_insns_for_speculation): Also mirror
	the second pass of workaround_speculation, creating 1-cycle stall
	insns.
	* config/bfin/predicates.md (const1_operand, const3_operand): New.
	(mem_p_address_operand): Exclude stack and frame pointer based
	addresses.
	(mem_spfp_address_operand): New; match them here.

	* config/bfin/bfin.c (bfin_optimize_loop): Don't fail if the loop ends
	with a jump, emit an extra nop instead.

2008-11-10  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_gen_bundles): Remove dummy insns created
	by add_sched_insns_for_speculation.
	(workaround_speculation): Don't delete them here.

2008-11-05  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (UNSPEC_VOLATILE_PLACEHOLDER): New constant.
	(attr "type"): New entry "ph3".
	(cpu_unit "load"): New.
	(insn_reservations "load32", "loadp", "loadi"): Add reservation of
	"load".
	(insn_reservation "ph3"): New.
	(ph3): New insn.
	* config/bfin/bfin.c (add_sched_insns_for_speculation): New function.
	(bfin_reorg): Call it if scheduling insns.
	(workaround_speculation): Delete the new "ph3" insns.

2008-10-23  Bernd Schmidt  <bernd.schmidt@analog.com>

	An old patch from Jie:
	* config/bfin/bfin.md (composev2hi): Put operands into vector
	with correct order.

2008-10-22  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_cpus): Fix up revisions 0.2 of 538 and 561.

2008-10-20  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin-protos.h (WA_05000257, WA_05000283, WA_05000315,
	ENABLE_WA_05000257, ENABLE_WA_05000283, ENABLE_WA_05000315): New.
	* config/bfin/bfin.c (bfin_cpus): Add these workaround bits as
	appropriate.
	(must_save_p): For some workarounds, interrupts need to clobber a
	P register.
	(expand_prologue_reg_save, expand_epilogue_reg_restore): Save LC0
	and LC1 for WA_05000257.
	(expand_interrupt_handler_prologue): Add dummy read of CHIPID for
	WA_05000283 and WA_05000315.
	* config/bfin/bfin.md (UNSPEC_VOLATILE_DUMMY): New constant.
	(movbi): Add alternative to set CC to 1; improve code for setting
	CC to 0.
	(dummy_load): New pattern.

2008-10-15  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (struct machine_function): New member
	has_loopreg_clobber.
	(bfin_expand_movmem): Set it when generating memcpy insns.
	(n_regs_saved_by_prologue, expand_prologue_reg_save,
	expand_epilogue_reg_restore): If we have hardware loops,
	memcpy insns (indicated by has_loopreg_clobber) or function
	calls, we need to save the loop registers.

2008-10-15  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/elf.h (STARTFILE_SPEC): Add start files for BF579.
	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Don't define
	__ADSPLPBLACKFIN__ for BF579.

2008-10-14  Jie Zhang  <jie.zhang@analog.com>

	* config/bfin/bfin-protos.h (enum bfin_cpu_type): Add
	BFIN_CPU_BF579.
	* config/bfin/elf.h (LIB_SPEC): Use proper linker script
	for bf579.
	* config/bfin/bfin.c (bfin_cpus[]): Add bf579.
	* config/bfin/bfin.h (ASM_SPEC): Pass down -mcpu to assembler.
	(TARGET_CPU_CPP_BUILTINS): Define __ADSPBF579__ for bf579.
	* doc/invoke.texi (Blackfin Options): Document that
	-mcpu now accept bf579.

2008-10-06  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.opt (micplb): New option.
	* config/bfin/linux.h (SUBTARGET_DRIVER_SELF_SPECS): Set it.
	* config/bfin/bfin-protos.h (WA_INDIRECT_CALLS,
	ENABLE_WA_INDIRECT_CALLS): New macros.
	* config/bfin/bfin.c (bfin_cpus): Add WA_INDIRECT_CALLS to
	all 54x CPUs.
	(indirect_call_p): New function.
	(workaround_speculation): Handle anomaly 05-00-0426 when
	ENABLE_WA_INDIRECT_CALLS is true.
	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Define
	__WORKAROUND_INDIRECT_CALLS if ENABLE_WA_INDIRECT_CALLS.
	* doc/invoke.texi (Blackfin Options): Document -micplb.

2008-10-01  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/bfin-protos.h (bfin_cpu_type): Add BFIN_CPU_BF512,
	BFIN_CPU_BF514, BFIN_CPU_BF516, and BFIN_CPU_BF518.
	* config/bfin/bfin.c (bfin_cpus[]): Add 0.0 for bf512, bf514, bf516,
	and bf518.
	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Define __ADSPBF512__
	for BFIN_CPU_BF512, __ADSPBF514__ for BFIN_CPU_BF514, __ADSPBF516__
	for BFIN_CPU_BF516, and __ADSPBF518__ for BFIN_CPU_BF518.  Define
	__ADSPBF51x__ for all of them.
	* config/bfin/elf.h (LIB_SPEC): Select proper linker scripts for
	-mcpu bf512, bf514, bf516, and bf518.
	* config/bfin/t-bfin-elf (MULTILIB_MATCHES): Select bf532-none for
	bf512-none, bf514-none, bf516-none, and bf518-none.
	* config/bfin/t-bfin-linux (MULTILIB_MATCHES): Likewise.
	* config/bfin/t-bfin-uclinux (MULTILIB_MATCHES): Likewise.
	* doc/invoke.texi (Blackfin Options): Document that
	-mcpu now accepts bf512, bf514, bf516, and bf518.

2008-09-30  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bdesc_2arg): Add mulhisill, mulhisilh,
	mulhisihl and mulhisihh builtins.

2008-09-16  Bernd Schmidt  <bernd.schmidt@analog.com>

	From Andrew Pinski:
	* tree-ssa-loop-ivopts.c (determine_use_iv_cost_condition): Prefer the
	eliminate IV if the cost are the same.

2008-09-15  Mike Frysinger  <michael.frysinger@analog.com>

	* config/bfin/bfin.c (bfin_cpus[]): Add 0.2 for bf522, bf523, bf524,
	bf526, and bf527.  Add 0.6 for bf533, bf532, and bf531.  Add 0.5 for
	bf538 and bf539.  Add 0.2 for bf542, bf544, bf547, bf548, and bf549.

2008-09-10  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.mc (cbranch_with_nops): Increase length.

2008-09-09  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (workaround_speculation): Fix merge error.
	Change second pass to use find_next_insn_start and find_load helpers
	in order to properly detect parallel insns.

2008-09-08  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (workaround_speculation): Correct algorithm to
	not lose track of the number of NOPs needed.  Number of NOPs needed
	for sync vs. loads workaround was switched; corrected.  Run second
	pass for all workarounds.  No NOPs needed after call insns.
	(bfin_reorg): Remove unnecessary variable.

	From Jie:
	* config/bfin/uclinux.h (LINK_GCC_C_SEQUENCE_SPEC): Make sure
	libbffastfp override libgcc when -mfast-fp.

	From Mike:
	* config/bfin/lib1funcs.asm (___divsi3, ___modsi3, ___udivsi3,
	___umodsi3, ___umulsi3_highpart, ___smulsi3_highpart): Define .size.

2008-09-04  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (gen_one_bundle): Don't create new nops if
	optimizing for size.

2008-09-03  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (n_regs_to_save): New static variable.
	(push_multiple_operation, pop_multiple_operation): Set it.
	(workaround_speculation): New function, broken out of bfin_reorg.
	(workaround_rts_anomaly): New function.
	(bfin_reorg): Call these two functions.

2008-09-02  Bernd Schmidt  <bernd.schmidt@analog.com>

	Restore a cost check that was lost.
	* tree-ssa-loop-ivopts.c (expression_expensive_p): New function.
	* tree-scalar-evolution.c (scev_const_prop): Use it.
	* tree-flow.h (expression_expensive_p): Declare it.

2008-09-02  Jie Zhang  <jie.zhang@analog.com>

	* doc/extend.texi (node Function Attributes): Document l2
	function attribute.
	(node Variable Attributes): Add Blackfin subsection. Document l1
	variable attributes.

2008-09-02  Jie Zhang  <jie.zhang@analog.com>
	
	* config/bfin/bfin.c (bfin_expand_call): Handle L2 functions.
	(bfin_handle_l2_attribute): New.
	(bfin_attribute_table): Add l2 attribute.

2008-08-31  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_longcall_p): Don't use short calls for weak
	symbols.

2008-08-30  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.md (movpdi): All alternatives have length 4.

	* config/bfin/bfin.c (bfin_expand_prologue): Honour no_stack_limit
	attributes.

	2007-12-07  Michael Frysinger  <michael.frysinger@analog.com>
	* config/bfin/bfin.c (bfin_handle_option): Remove BF561 warning.

	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Define
	__WORKAROUND_RETS when appropriate.

	* config/bfin/uclinux.h (SUBTARGET_FDPIC_NOT_SUPPORTED): New macro.
	* config/bfin/bfin.c (override_options): Test it and sorry out if
	TARGET_FDPIC is also set.

	* config/bfin/bfin.c (override_options): Disable -fstack-limit for
	FD-PIC.

	2008-06-02  Mike Frysinger  <michael.frysinger@analog.com>
	* config/bfin/bfin.c (bfin_cpus[]): Add 0.1 for bf522, bf523, bf524,
	bf525, bf526, bf527, bf542, bf544, bf547, bf548, and bf549.  Add 0.2
	for bf538.

	* config/bfin/bfin.md (loadbytes): New pattern.
	* config/bfin/bfin.c (enum bfin_builtins): Add BFIN_BUILTIN_LOADBYTES.
	(bfin_init_builtins): Initialize it.
	(bdesc_1arg): Add it.

	* config/bfin/bfin.c (bfin_discover_loops): Delete empty loops.

	* config/bfin/bfin.c (bfin_optimize_loop): Properly handle case
	where we have one entry point in the loop which isn't the head.

	From Jie Zhang  <jie.zhang@analog.com>
        * config/bfin/t-bfin-elf (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,
	MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Remove mcpu=bf532-0.3,
	mcpu=bf561-none and mcpu=bf561-0.2.
	* config/bfin/t-bfin-uclinux (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,
	MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Likewise.
	* config/bfin/t-bfin-linux (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,
	MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Likewise.
	* config/bfin/bfin-protos.h (enum bfin_cpu_type): Add
	BFIN_CPU_UNKNOWN.
	* config/bfin/elf.h (STARTFILE_SPEC): Use specific CRT for
	BF561.
	(LIB_SPEC): Use proper linker script for bf561.  Error if no mcpu
	option.
	* config/bfin/bfin.c (bfin_cpu_type): Set to BFIN_CPU_UNKNOWN.
	(cputype_selected): Remove.
	(bfin_handle_option): Don't use cputype_selected.
	(override_options): When no mcpu option, enable all workarounds.
	Don't use bfin_workarounds.
	* config/bfin/bfin.h (DRIVER_SELF_SPECS): Don't set default
	processor type.
	(DEFAULT_CPU_TYPE): Don't define.
