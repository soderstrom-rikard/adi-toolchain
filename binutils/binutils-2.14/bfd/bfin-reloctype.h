#if !defined(BFIN_RELOC_TYPE_H)
#define BFIN_RELOC_TYPE_H
enum reloc_type {
  R_unused0, /* relocation type 0 is not defined*/
  R_pcrel5m2, /*LSETUP part a*/
  R_unused1, /* relocation type 2 is not defined*/
  R_pcrel10, /* type 3, if cc jump <target>  */
  R_pcrel12_jump, /* type 4, jump <target> */
  R_rimm16,    /* type 0x5, rN = <target> */
  R_luimm16,  /* # 0x6, preg.l=<target> Load imm 16 to lower half */
  R_huimm16,  /* # 0x7, preg.h=<target> Load imm 16 to upper half*/
  R_pcrel12_jump_s, /* # 0x8 jump.s <target> */
  R_pcrel24_jump_x, /* # 0x9 jump.x <target> */
  R_pcrel24,        /* # 0xa call <target> , not expandable*/
  R_unusedb,         /* # 0xb not generated */
  R_unusedc,       /* # 0xc  not used */
  R_pcrel24_jump_l, /*0xd jump.l <target>*/
  R_pcrel24_call_x, /* 0xE, call.x <target> if <target> is above 24 bit limit call through P1 */
  R_var_eq_symb,    /* 0xf, linker should treat it same as 0x12 */
  R_byte_data,      /* 0x10, .byte var = symbol */
  R_byte2_data,     /* 0x11, .byte2 var = symbol */
  R_byte4_data,     /* 0x12, .byte4 var = symbol and .var var=symbol */
  R_pcrel11,        /* 0x13, lsetup part b */
  R_unused14,       /* 0x14, undefined */
  R_unused15,       /* not generated by VDSP 3.5 */
  R_push,
  R_const,
  R_add,
  R_sub,
  R_mult,
  R_div,
  R_mod,
  R_lshift,
  R_rshift,
  R_and,
  R_or,
  R_xor,
  R_land,
  R_lor,
  R_len,
  R_neg,
  R_comp,
  R_page,
  R_hwpage,
  R_addr,
  R_max
};
#endif //BFIN_RELOC_TYPE_H
