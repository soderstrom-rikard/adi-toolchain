AC_INIT(configure.in)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(libftdi, 0.14)

AC_LANG_C
AC_PROG_CC
AM_PROG_LIBTOOL

dnl check for libusb-config
AC_PATH_PROG(HAVELIBUSB, libusb-config, $PATH)

if test ! -z "$HAVELIBUSB"; then
   LIBUSB_CFLAGS=`$HAVELIBUSB --cflags`
   LIBUSB_LIBS=`$HAVELIBUSB --libs`

   CFLAGS="$CFLAGS $LIBUSB_CFLAGS"
   LIBS="$LIBS $LIBUSB_LIBS"
else
   AC_MSG_ERROR([*** libusb-config not found. You need a working libusb installation.])
fi

dnl check for version of libusb
AC_MSG_CHECKING([if libusb version is >= 0.1.7])
libusb_version_needed="1007"
libusb_version=`$HAVELIBUSB --version | sed -e "s/libusb //" | awk 'BEGIN { FS = "."; } { printf "%d", ($''1 * 1000 + $''2) * 1000 + $''3;}'`

if test $libusb_version -lt $libusb_version_needed; then
   AC_MSG_RESULT(no)
   AC_MSG_ERROR([*** libusb is too old ($libusb_version). You need a libusb installation newer or equal to 0.1.7.])
else
   AC_MSG_RESULT(yes)
fi

ENABLE_ASYNC_MODE=0
AC_ARG_WITH(async-mode,
[  --with-async-mode       enable experimental async mode. Linux only.],
[
  AC_MSG_CHECKING(for experimental linux async mode)
  if test "$withval" != "no"; then
    ENABLE_ASYNC_MODE=1
    CFLAGS="$CFLAGS -DLIBFTDI_LINUX_ASYNC_MODE"
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
])
AC_SUBST(ENABLE_ASYNC_MODE)

dnl check for doxygen
AC_PATH_PROG(DOXYGEN, doxygen)
AM_CONDITIONAL(HAVE_DOXYGEN, test -n $DOXYGEN)

AC_OUTPUT([libftdi-config],[chmod a+x libftdi-config])
AC_OUTPUT(Makefile src/Makefile examples/Makefile doc/Doxyfile doc/Makefile libftdi.pc libftdi.spec)
